name: Build & Release Executable

on:
  push:
    branches:
      - main  # Trigger only on main branch

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Multi-OS build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install dependencies for Linux
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y meson ninja-build gcc g++ 

      # Install dependencies for macOS
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install meson ninja
          
      # Configure Meson
      - name: Configure Meson
        run: meson setup builddir

      # Compile project using Ninja
      - name: Compile project
        run: ninja -C builddir

      # Upload the executables as artifacts
      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ runner.os }}
          path: builddir/DungeonCrawl

  release:
    needs: build
    runs-on: ubuntu-latest  # Push the release from Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Auto Tag Release
        id: auto_tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch  # Can be 'patch', 'minor', or 'major'
          WITH_V: true  # Adds 'v' prefix (e.g., v1.0.1)

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts  # Store all artifacts in the 'artifacts/' folder

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.auto_tag.outputs.new_tag }}
          name: Release ${{ steps.auto_tag.outputs.new_tag }}
          body: "Release: Built from the latest commit."
          draft: false
          prerelease: false
          files: |
            executable-ubuntu-latest/my_executable
            executable-macos-latest/my_executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
