<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="character_8c" kind="file" language="C++">
    <compoundname>character.c</compoundname>
    <includes refid="character_8h" local="yes">character.h</includes>
    <includes refid="ability_8h" local="yes">../combat/ability.h</includes>
    <includes refid="common_8h" local="yes">../common.h</includes>
    <includes refid="logger_8h" local="yes">../logging/logger.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="12">
        <label>../../include/sqlite3.h</label>
      </node>
      <node id="1">
        <label>src/character/character.c</label>
        <link refid="character_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>character.h</label>
        <link refid="character_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../character/character_fw.h</label>
        <link refid="character__fw_8h"/>
      </node>
      <node id="10">
        <label>../combat/ability.h</label>
        <link refid="ability_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../combat/ability_fw.h</label>
        <link refid="ability__fw_8h"/>
      </node>
      <node id="4">
        <label>../combat/damage.h</label>
        <link refid="damage_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../database/database.h</label>
        <link refid="database_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../item/gear.h</label>
        <link refid="gear_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gear_identifier.h</label>
        <link refid="gear__identifier_8h"/>
      </node>
      <node id="15">
        <label>../item/potion.h</label>
        <link refid="potion_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="8">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="13">
        <label>../stats/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="character_8c_1a6475f3e7aa73cfe75a2371a6e07aba3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
        <definition>character_t * init_character</definition>
        <argsstring>(memory_pool_t *memory_pool, const character_type_t type, const char *name)</argsstring>
        <name>init_character</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type>character_type_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Initializes a new character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool for dynamic allocation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the character (e.g., player, enemy) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the initialized character, or NULL on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="13" column="13" bodyfile="src/character/character.c" bodystart="13" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a77ef40fdd4f884f5818d81a18d544460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_character</definition>
        <argsstring>(memory_pool_t *memory_pool, character_t *character)</argsstring>
        <name>free_character</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Frees the memory allocated for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool used for allocation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to be freed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="60" column="6" bodyfile="src/character/character.c" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a3f8d0f49cdd311f972cc95e12c27f36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_character_stats</definition>
        <argsstring>(character_t *character, int strength, int intelligence, int dexterity, int constitution)</argsstring>
        <name>set_character_stats</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intelligence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dexterity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>constitution</declname>
        </param>
        <briefdescription>
<para>Sets the stats for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to set stats for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strength</parametername>
</parameternamelist>
<parameterdescription>
<para>Strength value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intelligence</parametername>
</parameternamelist>
<parameterdescription>
<para>Intelligence value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dexterity</parametername>
</parameternamelist>
<parameterdescription>
<para>Dexterity value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constitution</parametername>
</parameternamelist>
<parameterdescription>
<para>Constitution value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="66" column="6" bodyfile="src/character/character.c" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a484f54433d003fa1ca771c709361d7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_stats</definition>
        <argsstring>(stats_t *stats, int strength, int intelligence, int dexterity, int constitution)</argsstring>
        <name>set_stats</name>
        <param>
          <type><ref refid="structstats__t" kindref="compound">stats_t</ref> *</type>
          <declname>stats</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intelligence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dexterity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>constitution</declname>
        </param>
        <briefdescription>
<para>Sets the stats for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stats</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the stats structure to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strength</parametername>
</parameternamelist>
<parameterdescription>
<para>Strength value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intelligence</parametername>
</parameternamelist>
<parameterdescription>
<para>Intelligence value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dexterity</parametername>
</parameternamelist>
<parameterdescription>
<para>Dexterity value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constitution</parametername>
</parameternamelist>
<parameterdescription>
<para>Constitution value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="77" column="6" bodyfile="src/character/character.c" bodystart="77" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_character_resources</definition>
        <argsstring>(resources_t *current_resources, resources_t *max_resources, stats_t *base_stats)</argsstring>
        <name>update_character_resources</name>
        <param>
          <type><ref refid="structresources__t" kindref="compound">resources_t</ref> *</type>
          <declname>current_resources</declname>
        </param>
        <param>
          <type><ref refid="structresources__t" kindref="compound">resources_t</ref> *</type>
          <declname>max_resources</declname>
        </param>
        <param>
          <type><ref refid="structstats__t" kindref="compound">stats_t</ref> *</type>
          <declname>base_stats</declname>
        </param>
        <briefdescription>
<para>Updates the character&apos;s resources based on their stats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current resources structure to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the max resources structure to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base_stats</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the base stats structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="86" column="6" bodyfile="src/character/character.c" bodystart="86" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a7c7f7133819e040d60b082e65d3479dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_character_dmg_modifier</definition>
        <argsstring>(character_t *character, damage_type_t type, int value)</argsstring>
        <name>set_character_dmg_modifier</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>damage_type_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the damage modifier for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to set the damage modifier for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of damage to modify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the damage modifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="115" column="6" bodyfile="src/character/character.c" bodystart="115" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1ac1e7edc495be29bb8233cb226a2c2b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_ability</definition>
        <argsstring>(character_t *character, ability_t *ability)</argsstring>
        <name>add_ability</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structability__t" kindref="compound">ability_t</ref> *</type>
          <declname>ability</declname>
        </param>
        <briefdescription>
<para>Adds an ability to a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ability</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="127" column="6" bodyfile="src/character/character.c" bodystart="127" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1ad33b1544779645cd5debe1c4b3f3c292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_ability</definition>
        <argsstring>(character_t *character, const ability_t *ability)</argsstring>
        <name>remove_ability</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>const <ref refid="structability__t" kindref="compound">ability_t</ref> *</type>
          <declname>ability</declname>
        </param>
        <briefdescription>
<para>Removes an ability from a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ability</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="139" column="6" bodyfile="src/character/character.c" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>add_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Adds gear to a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="156" column="6" bodyfile="src/character/character.c" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a9b6139833c080df6362f786be008d485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>remove_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Removes a gear item from a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear item to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="169" column="6" bodyfile="src/character/character.c" bodystart="169" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1ab1e37ddc08bedac489696c9d5c67a391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_equipped_gear</definition>
        <argsstring>(character_t *character, gear_slot_t slot)</argsstring>
        <name>remove_equipped_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>gear_slot_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Removes the gear equipped in a specific slot of a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character whose gear is to be removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot from which the gear should be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="187" column="6" bodyfile="src/character/character.c" bodystart="187" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a7260b96f41aa6f3231f07bc00a63d9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add_equipped_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>add_equipped_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Adds an equipped gear in a specific slot of a character without updating stats and abilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the equipped gear to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the gear was successfully added, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="216" column="6" bodyfile="src/character/character.c" bodystart="216" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a54c2a5ff451efcd844bcdc22d912d7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_potion</definition>
        <argsstring>(character_t *character, potion_t *potion)</argsstring>
        <name>add_potion</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structpotion__t" kindref="compound">potion_t</ref> *</type>
          <declname>potion</declname>
        </param>
        <briefdescription>
<para>Adds a potion to a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>potion</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the potion to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="242" column="6" bodyfile="src/character/character.c" bodystart="242" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a9dfe2b261717a1bf4df0398248583d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_potion</definition>
        <argsstring>(character_t *character, potion_t *potion)</argsstring>
        <name>remove_potion</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structpotion__t" kindref="compound">potion_t</ref> *</type>
          <declname>potion</declname>
        </param>
        <briefdescription>
<para>Removes a potion from a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>potion</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the potion to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="254" column="6" bodyfile="src/character/character.c" bodystart="254" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a3176d1d1f62a7fc8ceabef4df6a1062c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void equip_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>equip_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Equips a gear item to a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear item to equip </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="272" column="6" bodyfile="src/character/character.c" bodystart="272" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1af400a546969c8ca37e027e41450ea40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unequip_gear</definition>
        <argsstring>(character_t *character, const gear_slot_t slot)</argsstring>
        <name>unequip_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>gear_slot_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Unequips a gear item from a character and adds it to the character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot to unequip from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="292" column="6" bodyfile="src/character/character.c" bodystart="292" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1af3632285f8e838713346e57ada76152c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_initial_xp</definition>
        <argsstring>(character_t *character, int xp)</argsstring>
        <name>set_initial_xp</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
<para>sets initial xp for a character </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial xp value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="300" column="6" bodyfile="src/character/character.c" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1ae2022c4f067b5680708525477ff5bd4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_level</definition>
        <argsstring>(character_t *character, int level)</argsstring>
        <name>set_level</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Sets the level for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="305" column="6" bodyfile="src/character/character.c" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1ac57163bbd7a9a6802ebd1554cc24b2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_xp_reward</definition>
        <argsstring>(character_t *character, int xp_reward)</argsstring>
        <name>set_xp_reward</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xp_reward</declname>
        </param>
        <briefdescription>
<para>Sets the XP reward for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp_reward</parametername>
</parameternamelist>
<parameterdescription>
<para>The XP reward value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="310" column="6" bodyfile="src/character/character.c" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1aa0397e3fbf0b4f56425d5823a1f0b217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_skill_points</definition>
        <argsstring>(character_t *character, int skill_points)</argsstring>
        <name>set_skill_points</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skill_points</declname>
        </param>
        <briefdescription>
<para>Sets the skill points for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skill_points</parametername>
</parameternamelist>
<parameterdescription>
<para>How many skill points the character has </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="315" column="6" bodyfile="src/character/character.c" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="character_8c_1a8d818f0345771df9d254997231eca424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_player_stats</definition>
        <argsstring>(character_t *player)</argsstring>
        <name>reset_player_stats</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Resets the player stats to their base values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the player character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.c" line="320" column="6" bodyfile="src/character/character.c" bodystart="320" bodyend="327"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implements character functionallity. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="character_8h" kindref="compound">character.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ability_8h" kindref="compound">../combat/ability.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">../common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8h" kindref="compound">../logging/logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="character_8c_1a6475f3e7aa73cfe75a2371a6e07aba3d" refkind="member"><highlight class="normal"><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/><ref refid="character_8c_1a6475f3e7aa73cfe75a2371a6e07aba3d" kindref="member">init_character</ref>(memory_pool_t*<sp/>memory_pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>character_type_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(memory_pool,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>init_character<sp/>memory<sp/>pool<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(name,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>init_character<sp/>name<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character<sp/>=<sp/><ref refid="memory__management_8c_1ad9c929376b0501e9ad79f3a293fe8a71" kindref="member">memory_pool_alloc</ref>(memory_pool,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcharacter__t" kindref="compound">character_t</ref>));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>character:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(character-&gt;name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(character-&gt;name),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;base_stats<sp/>=<sp/>(<ref refid="structstats__t" kindref="compound">stats_t</ref>)<sp/>{0};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;current_stats<sp/>=<sp/>(<ref refid="structstats__t" kindref="compound">stats_t</ref>)<sp/>{0};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;max_resources<sp/>=<sp/>(<ref refid="structresources__t" kindref="compound">resources_t</ref>)<sp/>{0};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;current_resources<sp/>=<sp/>(<ref refid="structresources__t" kindref="compound">resources_t</ref>)<sp/>{0};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DAMAGE_TYPE_COUNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;resistance[i].type<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;resistance[i].value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;defenses<sp/>=<sp/>(<ref refid="structdefenses__t" kindref="compound">defenses_t</ref>)<sp/>{0};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_ABILITY_LIMIT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;abilities[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;base_attack<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;ability_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POTION_LIMIT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_inventory[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;potion_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_GEAR_LIMIT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_inventory[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;gear_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_SLOT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;equipment[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;xp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;xp_reward<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;skill_points<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>character;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="character_8c_1a77ef40fdd4f884f5818d81a18d544460" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a77ef40fdd4f884f5818d81a18d544460" kindref="member">free_character</ref>(memory_pool_t*<sp/>memory_pool,<sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(memory_pool,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>free_character<sp/>memory<sp/>pool<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>free_character<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory__management_8c_1af72f6fb9c867ee59c91532a9022e322e" kindref="member">memory_pool_free</ref>(memory_pool,<sp/>character);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="character_8c_1a3f8d0f49cdd311f972cc95e12c27f36a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a3f8d0f49cdd311f972cc95e12c27f36a" kindref="member">set_character_stats</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intelligence,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dexterity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constitution)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_character_stats<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="character_8c_1a484f54433d003fa1ca771c709361d7cb" kindref="member">set_stats</ref>(&amp;character-&gt;base_stats,<sp/>strength,<sp/>intelligence,<sp/>dexterity,<sp/>constitution);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;current_stats<sp/>=<sp/>character-&gt;base_stats;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" kindref="member">update_character_resources</ref>(&amp;character-&gt;current_resources,<sp/>&amp;character-&gt;max_resources,<sp/>&amp;character-&gt;base_stats);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;current_resources<sp/>=<sp/>character-&gt;max_resources;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;defenses.armor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;defenses.magic_resist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="character_8c_1a484f54433d003fa1ca771c709361d7cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a484f54433d003fa1ca771c709361d7cb" kindref="member">set_stats</ref>(<ref refid="structstats__t" kindref="compound">stats_t</ref>*<sp/>stats,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intelligence,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dexterity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constitution)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(stats,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_stats<sp/>stats<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;strength<sp/>=<sp/>strength;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;intelligence<sp/>=<sp/>intelligence;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;dexterity<sp/>=<sp/>dexterity;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;constitution<sp/>=<sp/>constitution;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" kindref="member">update_character_resources</ref>(<ref refid="structresources__t" kindref="compound">resources_t</ref>*<sp/>current_resources,<sp/><ref refid="structresources__t" kindref="compound">resources_t</ref>*<sp/>max_resources,<sp/><ref refid="structstats__t" kindref="compound">stats_t</ref>*<sp/>base_stats)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(current_resources,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>update_character_resources<sp/>current_resources<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(max_resources,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>update_character_resources<sp/>max_resources<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(base_stats,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>update_character_resources<sp/>base_stats<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_max_health<sp/>=<sp/>5<sp/>*<sp/>base_stats-&gt;constitution;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_max_mana<sp/>=<sp/>1<sp/>*<sp/>base_stats-&gt;intelligence;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_max_stamina<sp/>=<sp/>2<sp/>*<sp/>base_stats-&gt;strength;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_resources-&gt;health<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>current_resources-&gt;health<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_resources-&gt;health<sp/>=<sp/>(int)<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>current_resources-&gt;health<sp/>/<sp/>max_resources-&gt;health<sp/>*<sp/>new_max_health<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_resources-&gt;mana<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>current_resources-&gt;mana<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_resources-&gt;mana<sp/>=<sp/>(int)<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>current_resources-&gt;mana<sp/>/<sp/>max_resources-&gt;mana<sp/>*<sp/>new_max_mana<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_resources-&gt;stamina<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>current_resources-&gt;stamina<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_resources-&gt;stamina<sp/>=<sp/>(int)<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>current_resources-&gt;stamina<sp/>/<sp/>max_resources-&gt;stamina<sp/>*<sp/>new_max_stamina<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>current<sp/>values<sp/>to<sp/>new<sp/>max<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>current_resources-&gt;health<sp/>=<sp/>current_resources-&gt;health<sp/>&gt;<sp/>new_max_health<sp/>?<sp/>new_max_health<sp/>:<sp/>current_resources-&gt;health;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>current_resources-&gt;mana<sp/>=<sp/>current_resources-&gt;mana<sp/>&gt;<sp/>new_max_mana<sp/>?<sp/>new_max_mana<sp/>:<sp/>current_resources-&gt;mana;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>current_resources-&gt;stamina<sp/>=<sp/>current_resources-&gt;stamina<sp/>&gt;<sp/>new_max_stamina<sp/>?<sp/>new_max_stamina<sp/>:<sp/>current_resources-&gt;stamina;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>max_resources-&gt;health<sp/>=<sp/>new_max_health;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>max_resources-&gt;mana<sp/>=<sp/>new_max_mana;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>max_resources-&gt;stamina<sp/>=<sp/>new_max_stamina;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="character_8c_1a7c7f7133819e040d60b082e65d3479dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a7c7f7133819e040d60b082e65d3479dc" kindref="member">set_character_dmg_modifier</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/>damage_type_t<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_character_dmg_modifier<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DAMAGE_TYPE_COUNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;resistance[i].type<sp/>==<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;resistance[i].value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>damage<sp/>type:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>type);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="character_8c_1ac1e7edc495be29bb8233cb226a2c2b15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1ac1e7edc495be29bb8233cb226a2c2b15" kindref="member">add_ability</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_ability<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(ability,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_ability<sp/>ability<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;ability_count<sp/>&lt;<sp/>MAX_ABILITY_LIMIT)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;abilities[character-&gt;ability_count]<sp/>=<sp/>ability;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;ability_count++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>cannot<sp/>learn<sp/>more<sp/>abilities!&quot;</highlight><highlight class="normal">,<sp/>character-&gt;name);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="character_8c_1ad33b1544779645cd5debe1c4b3f3c292" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1ad33b1544779645cd5debe1c4b3f3c292" kindref="member">remove_ability</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_ability<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(ability,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_ability<sp/>ability<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>character-&gt;ability_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;abilities[i]<sp/>==<sp/>ability)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>character-&gt;ability_count<sp/>-<sp/>1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;abilities[j]<sp/>=<sp/>character-&gt;abilities[j<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;abilities[character-&gt;ability_count<sp/>-<sp/>1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;ability_count--;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="character_8c_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" kindref="member">add_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(gear,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_gear<sp/>gear<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;gear_count<sp/>&lt;<sp/>MAX_GEAR_LIMIT)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_inventory[character-&gt;gear_count]<sp/>=<sp/>gear;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_count++;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>cannot<sp/>carry<sp/>more<sp/>gear!&quot;</highlight><highlight class="normal">,<sp/>character-&gt;name);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="character_8c_1a9b6139833c080df6362f786be008d485" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a9b6139833c080df6362f786be008d485" kindref="member">remove_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(gear,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_gear<sp/>gear<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>character-&gt;gear_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;gear_inventory[i]<sp/>==<sp/>gear)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>character-&gt;gear_count<sp/>-<sp/>1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_inventory[j]<sp/>=<sp/>character-&gt;gear_inventory[j<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_inventory[character-&gt;gear_count<sp/>-<sp/>1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;gear_count--;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Gear<sp/>%s<sp/>not<sp/>found<sp/>in<sp/>inventory!&quot;</highlight><highlight class="normal">,<sp/>gear-&gt;local_key);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="character_8c_1ab1e37ddc08bedac489696c9d5c67a391" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1ab1e37ddc08bedac489696c9d5c67a391" kindref="member">remove_equipped_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/>gear_slot_t<sp/>slot)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_equipped_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_ARG_RETURN(slot<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>slot<sp/>&gt;=<sp/>MAX_SLOT,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_equipped_gear<sp/>slot<sp/>is<sp/>invalid:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>slot);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;equipment[slot]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear<sp/>=<sp/>character-&gt;equipment[slot];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.strength<sp/>-=<sp/>gear-&gt;stats.strength;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.intelligence<sp/>-=<sp/>gear-&gt;stats.intelligence;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.dexterity<sp/>-=<sp/>gear-&gt;stats.dexterity;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.constitution<sp/>-=<sp/>gear-&gt;stats.constitution;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;defenses.armor<sp/>-=<sp/>gear-&gt;defenses.armor;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;defenses.magic_resist<sp/>-=<sp/>gear-&gt;defenses.magic_resist;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" kindref="member">update_character_resources</ref>(&amp;character-&gt;current_resources,<sp/>&amp;character-&gt;max_resources,<sp/>&amp;character-&gt;base_stats);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gear-&gt;num_abilities;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1ad33b1544779645cd5debe1c4b3f3c292" kindref="member">remove_ability</ref>(character,<sp/>gear-&gt;abilities[i]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;ability_count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1ac1e7edc495be29bb8233cb226a2c2b15" kindref="member">add_ability</ref>(character,<sp/>character-&gt;base_attack);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;equipment[slot]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>gear<sp/>equipped<sp/>in<sp/>slot<sp/>%d!&quot;</highlight><highlight class="normal">,<sp/>slot);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="character_8c_1a7260b96f41aa6f3231f07bc00a63d9f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a7260b96f41aa6f3231f07bc00a63d9f6" kindref="member">add_equipped_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_equipped_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(gear,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_equipped_gear<sp/>gear<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gear-&gt;slot<sp/>&lt;<sp/>MAX_SLOT)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;equipment[gear-&gt;slot]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Slot<sp/>%d<sp/>is<sp/>already<sp/>occupied!&quot;</highlight><highlight class="normal">,<sp/>gear-&gt;slot);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;equipment[gear-&gt;slot]<sp/>=<sp/>gear;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;abilities[0]<sp/>==<sp/>character-&gt;base_attack)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1ad33b1544779645cd5debe1c4b3f3c292" kindref="member">remove_ability</ref>(character,<sp/>character-&gt;abilities[0]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gear-&gt;num_abilities;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1ac1e7edc495be29bb8233cb226a2c2b15" kindref="member">add_ability</ref>(character,<sp/>gear-&gt;abilities[i]);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>slot<sp/>for<sp/>gear<sp/>%s!&quot;</highlight><highlight class="normal">,<sp/>gear-&gt;local_key);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="character_8c_1a54c2a5ff451efcd844bcdc22d912d7e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a54c2a5ff451efcd844bcdc22d912d7e2" kindref="member">add_potion</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structpotion__t" kindref="compound">potion_t</ref>*<sp/>potion)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_potion<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(potion,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>add_potion<sp/>potion<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;potion_count<sp/>&lt;<sp/>MAX_POTION_LIMIT)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_inventory[character-&gt;potion_count]<sp/>=<sp/>potion;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_count++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>cannot<sp/>carry<sp/>more<sp/>potions!&quot;</highlight><highlight class="normal">,<sp/>character-&gt;name);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="character_8c_1a9dfe2b261717a1bf4df0398248583d22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a9dfe2b261717a1bf4df0398248583d22" kindref="member">remove_potion</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structpotion__t" kindref="compound">potion_t</ref>*<sp/>potion)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_potion<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(potion,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>remove_potion<sp/>potion<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>character-&gt;potion_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(character-&gt;potion_inventory[i]<sp/>==<sp/>potion)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>character-&gt;potion_count<sp/>-<sp/>1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_inventory[j]<sp/>=<sp/>character-&gt;potion_inventory[j<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_inventory[character-&gt;potion_count<sp/>-<sp/>1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;potion_count--;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Potion<sp/>%s<sp/>not<sp/>found<sp/>in<sp/>inventory!&quot;</highlight><highlight class="normal">,<sp/>potion-&gt;name);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="character_8c_1a3176d1d1f62a7fc8ceabef4df6a1062c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a3176d1d1f62a7fc8ceabef4df6a1062c" kindref="member">equip_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>equip_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(gear,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>equip_gear<sp/>gear<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="character_8c_1a7260b96f41aa6f3231f07bc00a63d9f6" kindref="member">add_equipped_gear</ref>(character,<sp/>gear))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1a9b6139833c080df6362f786be008d485" kindref="member">remove_gear</ref>(character,<sp/>gear);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.strength<sp/>+=<sp/>gear-&gt;stats.strength;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.intelligence<sp/>+=<sp/>gear-&gt;stats.intelligence;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.dexterity<sp/>+=<sp/>gear-&gt;stats.dexterity;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;base_stats.constitution<sp/>+=<sp/>gear-&gt;stats.constitution;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;defenses.armor<sp/>+=<sp/>gear-&gt;defenses.armor;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>character-&gt;defenses.magic_resist<sp/>+=<sp/>gear-&gt;defenses.magic_resist;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="character_8c_1a3b350cf68795ee4c81ed76bd4298837b" kindref="member">update_character_resources</ref>(&amp;character-&gt;current_resources,<sp/>&amp;character-&gt;max_resources,<sp/>&amp;character-&gt;base_stats);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>slot<sp/>for<sp/>gear<sp/>%s!&quot;</highlight><highlight class="normal">,<sp/>gear-&gt;local_key);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="character_8c_1af400a546969c8ca37e027e41450ea40b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1af400a546969c8ca37e027e41450ea40b" kindref="member">unequip_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gear_slot_t<sp/>slot)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>unequip_gear<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_ARG_RETURN(slot<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>slot<sp/>&gt;=<sp/>MAX_SLOT,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>unequip_gear<sp/>slot<sp/>is<sp/>invalid:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>slot);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="character_8c_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" kindref="member">add_gear</ref>(character,<sp/>character-&gt;equipment[slot]);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="character_8c_1ab1e37ddc08bedac489696c9d5c67a391" kindref="member">remove_equipped_gear</ref>(character,<sp/>slot);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="character_8c_1af3632285f8e838713346e57ada76152c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1af3632285f8e838713346e57ada76152c" kindref="member">set_initial_xp</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_initial_xp<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;xp<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="character_8c_1ae2022c4f067b5680708525477ff5bd4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1ae2022c4f067b5680708525477ff5bd4a" kindref="member">set_level</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_level<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;level<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="character_8c_1ac57163bbd7a9a6802ebd1554cc24b2e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1ac57163bbd7a9a6802ebd1554cc24b2e9" kindref="member">set_xp_reward</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp_reward)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_xp_reward<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;xp_reward<sp/>=<sp/>xp_reward;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="character_8c_1aa0397e3fbf0b4f56425d5823a1f0b217" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1aa0397e3fbf0b4f56425d5823a1f0b217" kindref="member">set_skill_points</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skill_points)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(character,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Character&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>set_skill_points<sp/>character<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>character-&gt;skill_points<sp/>=<sp/>skill_points;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="character_8c_1a8d818f0345771df9d254997231eca424" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8c_1a8d818f0345771df9d254997231eca424" kindref="member">reset_player_stats</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>player)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>current<sp/>stats<sp/>to<sp/>their<sp/>starting<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;current_resources.health<sp/>=<sp/>player-&gt;max_resources.health;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;current_resources.mana<sp/>=<sp/>player-&gt;max_resources.mana;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;current_resources.stamina<sp/>=<sp/>player-&gt;max_resources.stamina;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/character/character.c"/>
  </compounddef>
</doxygen>
