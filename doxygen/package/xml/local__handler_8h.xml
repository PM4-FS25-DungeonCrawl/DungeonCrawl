<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="local__handler_8h" kind="file" language="C++">
    <compoundname>local_handler.h</compoundname>
    <includedby refid="combat__mode_8c" local="yes">src/combat/combat_mode.c</includedby>
    <includedby refid="combat__mode__local_8c" local="yes">src/combat/local/combat_mode_local.c</includedby>
    <includedby refid="inventory__mode_8c" local="yes">src/inventory/inventory_mode.c</includedby>
    <includedby refid="inventory__mode__local_8c" local="yes">src/inventory/local/inventory_mode_local.c</includedby>
    <includedby refid="stats__output_8c" local="yes">src/io/output/specific/stats_output.c</includedby>
    <includedby refid="local__handler_8c" local="yes">src/local/local_handler.c</includedby>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <includedby refid="language__menu_8c" local="yes">src/menu/language_menu.c</includedby>
    <includedby refid="language__menu__local_8c" local="yes">src/menu/local/language_menu_local.c</includedby>
    <includedby refid="main__menu__local_8c" local="yes">src/menu/local/main_menu_local.c</includedby>
    <includedby refid="save__menu__local_8c" local="yes">src/menu/local/save_menu_local.c</includedby>
    <includedby refid="main__menu_8c" local="yes">src/menu/main_menu.c</includedby>
    <includedby refid="save__menu_8c" local="yes">src/menu/save_menu.c</includedby>
    <includedby refid="stats__mode__local_8c" local="yes">src/stats/local/stats_mode_local.c</includedby>
    <invincdepgraph>
      <node id="2">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="3">
        <label>src/combat/local/combat_mode_local.c</label>
        <link refid="combat__mode__local_8c"/>
      </node>
      <node id="4">
        <label>src/inventory/inventory_mode.c</label>
        <link refid="inventory__mode_8c"/>
      </node>
      <node id="5">
        <label>src/inventory/local/inventory_mode_local.c</label>
        <link refid="inventory__mode__local_8c"/>
      </node>
      <node id="6">
        <label>src/io/output/specific/stats_output.c</label>
        <link refid="stats__output_8c"/>
      </node>
      <node id="7">
        <label>src/local/local_handler.c</label>
        <link refid="local__handler_8c"/>
      </node>
      <node id="1">
        <label>src/local/local_handler.h</label>
        <link refid="local__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="9">
        <label>src/menu/language_menu.c</label>
        <link refid="language__menu_8c"/>
      </node>
      <node id="10">
        <label>src/menu/local/language_menu_local.c</label>
        <link refid="language__menu__local_8c"/>
      </node>
      <node id="11">
        <label>src/menu/local/main_menu_local.c</label>
        <link refid="main__menu__local_8c"/>
      </node>
      <node id="12">
        <label>src/menu/local/save_menu_local.c</label>
        <link refid="save__menu__local_8c"/>
      </node>
      <node id="13">
        <label>src/menu/main_menu.c</label>
        <link refid="main__menu_8c"/>
      </node>
      <node id="14">
        <label>src/menu/save_menu.c</label>
        <link refid="save__menu_8c"/>
      </node>
      <node id="15">
        <label>src/stats/local/stats_mode_local.c</label>
        <link refid="stats__mode__local_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="local__handler_8h_1a142bdded52e55045283beeb0bd1e40f9" prot="public" static="no" strong="no">
        <type></type>
        <name>local_lang_t</name>
        <enumvalue id="local__handler_8h_1a142bdded52e55045283beeb0bd1e40f9afc390e748fbdcb7ea7f773f02ad48f6c" prot="public">
          <name>LANGE_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="local__handler_8h_1a142bdded52e55045283beeb0bd1e40f9a6b03c335af17a0761cd8b49d937d44a6" prot="public">
          <name>LANGE_DE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="local__handler_8h_1a142bdded52e55045283beeb0bd1e40f9a7043b065eb662e8beccd172cd4d2fc1c" prot="public">
          <name>MAX_LANG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="8" column="1" bodyfile="src/local/local_handler.h" bodystart="8" bodyend="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="local__handler_8h_1a9a49e3ab8751c9d6a906b547558d56e0" prot="public" static="no" mutable="no">
        <type>local_lang_t</type>
        <definition>local_lang_t lang</definition>
        <argsstring></argsstring>
        <name>lang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="15" column="18" bodyfile="src/local/local_handler.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="local__handler_8h_1a8505c513bc640d1f69e5f76fb32b24a8" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* file_name</definition>
        <argsstring></argsstring>
        <name>file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="16" column="10" bodyfile="src/local/local_handler.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="local__handler_8h_1a764f836e87043b2490f952704208d9ef" prot="public" static="yes" mutable="no">
        <type>const struct </type>
        <definition>const struct  local_file_mapping[]</definition>
        <argsstring>[]</argsstring>
        <name>local_file_mapping</name>
        <initializer>= {
        {LANGE_EN, &quot;local_en.properties&quot;},
        {LANGE_DE, &quot;local_de.properties&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="19" column="1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="local__handler_8h_1a33223505427924fc18c482876ff612ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_local_handler</definition>
        <argsstring>(local_lang_t lang)</argsstring>
        <name>init_local_handler</name>
        <param>
          <type>local_lang_t</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
<para>Initialize the local language handler by setting up the language and opening the corresponding resource file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the handler to use the specified language. It opens the associated language file based on a predefined mapping and prepares the observer list for updates. If the handler is already initialized, a warning is logged and initialization is skipped.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lang</parametername>
</parameternamelist>
<parameterdescription>
<para>the language to be set for the local handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or 1 if the resource file cannot be opened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="31" column="5" bodyfile="src/local/local_handler.c" bodystart="32" bodyend="52" declfile="src/local/local_handler.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="local__handler_8h_1a56c6d5e9fa7b72411ddbb39a37ebbaaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * get_local_string</definition>
        <argsstring>(const char *key)</argsstring>
        <name>get_local_string</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the localized string for the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key for the localized string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the localized string, if the key is not found, returns the key itself </para>
</simplesect>
<simplesect kind="note"><para>The caller must free the returned string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="40" column="6" bodyfile="src/local/local_handler.c" bodystart="54" bodyend="86" declfile="src/local/local_handler.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="local__handler_8h_1ac976767164a4fd14798b38a185528b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int set_language</definition>
        <argsstring>(local_lang_t lang)</argsstring>
        <name>set_language</name>
        <param>
          <type>local_lang_t</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
<para>Sets the current language for the local handler and updates all registered observers. </para>
        </briefdescription>
        <detaileddescription>
<para>This function updates the current language setting which determines the active language file to be used. It attempts to close the current language file, opens the new associated language resource file, and subsequently notifies the observer list by invoking their respective update functions. The function ensures the validity of the input language and handles errors related to file operations or uninitialized states.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lang</parametername>
</parameternamelist>
<parameterdescription>
<para>the language to be set (e.g., LANGE_EN, LANGE_DE) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, 1 if the specified language file cannot be opened, or 2 if the handler is not initialized or the language is invalid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="55" column="5" bodyfile="src/local/local_handler.c" bodystart="89" bodyend="114" declfile="src/local/local_handler.h" declline="55" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="local__handler_8h_1a2ee20b5ced1851dfa72bbdef34fa1e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>local_lang_t</type>
        <definition>local_lang_t get_language</definition>
        <argsstring>(void)</argsstring>
        <name>get_language</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the currently set language of the local handler. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current language configured for the local handler. If the local handler is not initialized, it logs a warning message and defaults the language to English.</para>
<para><simplesect kind="return"><para>the current language as a value of local_lang_t, or LANGE_EN if the handler is not initialized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="66" column="14" bodyfile="src/local/local_handler.c" bodystart="116" bodyend="122" declfile="src/local/local_handler.h" declline="66" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="local__handler_8h_1aba89dc368496a4c4daad4102bb508a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void observe_local</definition>
        <argsstring>(void(*update_func)(void))</argsstring>
        <name>observe_local</name>
        <param>
          <type>void(*)(void)</type>
          <declname>update_func</declname>
        </param>
        <briefdescription>
<para>Registers an observer function to be notified of updates from the local handler. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds a new observer to the observer list maintained by the local handler. The observer function will be invoked when relevant updates occur. The observer handler must be initialized before calling this function. If the observer function or handler is invalid, the registration is aborted, and an error is logged.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>update_func</parametername>
</parameternamelist>
<parameterdescription>
<para>the observer function to be registered for receiving updates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="78" column="6" bodyfile="src/local/local_handler.c" bodystart="124" bodyend="138" declfile="src/local/local_handler.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="local__handler_8h_1a3172ed29ce8bc435a786e295a9d51fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shutdown_local_handler</definition>
        <argsstring>(void)</argsstring>
        <name>shutdown_local_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shut down the local language handler by releasing resources and closing the resource file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deallocates all memory used by the observer list tied to the local handler. It ensures that all dynamically allocated observer nodes are freed to prevent memory leaks. Additionally, it closes the language resource file if it was previously opened.</para>
<para>Proper usage of this function ensures a clean shutdown of the local language handler by releasing occupied resources and leaving no lingering operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/local/local_handler.h" line="90" column="6" bodyfile="src/local/local_handler.c" bodystart="140" bodyend="150" declfile="src/local/local_handler.h" declline="90" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes public functions for the localization handler. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LOCAL_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCAL_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>LANGE_EN,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>LANGE_DE,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>MAX_LANG</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}<sp/>local_lang_t;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>local_lang_t<sp/>lang;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_name;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}<sp/>local_file_mapping[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{LANGE_EN,<sp/></highlight><highlight class="stringliteral">&quot;local_en.properties&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{LANGE_DE,<sp/></highlight><highlight class="stringliteral">&quot;local_de.properties&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="local__handler_8h_1a33223505427924fc18c482876ff612ad" kindref="member">init_local_handler</ref>(local_lang_t<sp/>lang);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="local__handler_8h_1a56c6d5e9fa7b72411ddbb39a37ebbaaf" kindref="member">get_local_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="local__handler_8h_1ac976767164a4fd14798b38a185528b7e" kindref="member">set_language</ref>(local_lang_t<sp/>lang);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">local_lang_t<sp/><ref refid="local__handler_8h_1a2ee20b5ced1851dfa72bbdef34fa1e33" kindref="member">get_language</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="local__handler_8h_1aba89dc368496a4c4daad4102bb508a0e" kindref="member">observe_local</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*update_func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="local__handler_8h_1a3172ed29ce8bc435a786e295a9d51fb4" kindref="member">shutdown_local_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//LOCAL_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/local/local_handler.h"/>
  </compounddef>
</doxygen>
