<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="inventory__output_8c" kind="file" language="C++">
    <compoundname>inventory_output.c</compoundname>
    <includes refid="inventory__output_8h" local="yes">inventory_output.h</includes>
    <includes refid="character_8h" local="yes">../../../character/character.h</includes>
    <includes refid="common_8h" local="yes">../../../common.h</includes>
    <includes refid="logger_8h" local="yes">../../../logging/logger.h</includes>
    <includes refid="input__handler_8h" local="yes">../../input/input_handler.h</includes>
    <includes refid="io__handler_8h" local="yes">../../io_handler.h</includes>
    <includes refid="output__handler_8h" local="yes">../common/output_handler.h</includes>
    <incdepgraph>
      <node id="14">
        <label>../../include/sqlite3.h</label>
      </node>
      <node id="8">
        <label>../../../character/character.h</label>
        <link refid="character_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../../../character/character_fw.h</label>
        <link refid="character__fw_8h"/>
      </node>
      <node id="12">
        <label>../combat/ability.h</label>
        <link refid="ability_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../combat/ability_fw.h</label>
        <link refid="ability__fw_8h"/>
      </node>
      <node id="10">
        <label>../combat/damage.h</label>
        <link refid="damage_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../../../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../database/database.h</label>
        <link refid="database_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../../input/input_handler.h</label>
        <link refid="input__handler_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>input_types.h</label>
        <link refid="input__types_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>../../io_handler.h</label>
        <link refid="io__handler_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>output/common/output_handler.h</label>
        <link refid="output__handler_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>output/media/media_output.h</label>
        <link refid="media__output_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>media_output_handler.h</label>
        <link refid="media__output__handler_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/io/output/specific/inventory_output.c</label>
        <link refid="inventory__output_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>inventory_output.h</label>
        <link refid="inventory__output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../item/gear.h</label>
        <link refid="gear_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gear_identifier.h</label>
        <link refid="gear__identifier_8h"/>
      </node>
      <node id="17">
        <label>../item/potion.h</label>
        <link refid="potion_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="6">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="15">
        <label>../stats/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>notcurses/notcurses.h</label>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="inventory__output_8c_1a9bd3c11008f5a20187508060fcaf9d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
        <definition>vector2d_t draw_inventory_view</definition>
        <argsstring>(const vector2d_t anchor, const character_t *player)</argsstring>
        <name>draw_inventory_view</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Draws the inventory view UI. </para>
        </briefdescription>
        <detaileddescription>
<para>This function renders the inventory view including player resources and inventory space.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the inventory view, representing the top left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>The player character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new anchor point after drawing the inventory view </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/inventory_output.c" line="15" column="12" bodyfile="src/io/output/specific/inventory_output.c" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="inventory__output_8c_1a32e269c0a71a1f9fec853f3682e1f89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_inventory_menu</definition>
        <argsstring>(const vector2d_t anchor, const char *menu_name, const char *header_msg, char **menu_options, const int menu_option_count, const int selected_index, const char *key_msg, const char *tail_msg)</argsstring>
        <name>draw_inventory_menu</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>menu_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>header_msg</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menu_options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>menu_option_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selected_index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key_msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tail_msg</declname>
        </param>
        <briefdescription>
<para>Draws the inventory menu. </para>
        </briefdescription>
        <detaileddescription>
<para>This function renders a menu for the inventory mode with selectable options.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the inventory menu, representing the top left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to display at the top of the menu (can be NULL) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options of the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_option_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of options in the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selected_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the selected option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>First message to display at the bottom of the menu (can be NULL) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tail_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Second message to display at the bottom of the menu (can be NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/inventory_output.c" line="33" column="6" bodyfile="src/io/output/specific/inventory_output.c" bodystart="33" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="inventory__output_8c_1abec162193825c157bb1f05ffb528c378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_inventory_log</definition>
        <argsstring>(vector2d_t anchor, const char *inventory_log_message)</argsstring>
        <name>draw_inventory_log</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inventory_log_message</declname>
        </param>
        <briefdescription>
<para>Draws the inventory log. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays an inventory log message and waits for user input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the inventory log, representing the top-left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inventory_log_message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be displayed in the inventory log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/inventory_output.c" line="84" column="6" bodyfile="src/io/output/specific/inventory_output.c" bodystart="84" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="inventory__output_8c_1a8d28bbf9106c02bae93e670cb95312a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int draw_inventory_resource_bar</definition>
        <argsstring>(vector2d_t anchor, const character_t *c)</argsstring>
        <name>draw_inventory_resource_bar</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draws the resource bar for a character in the inventory view. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays the character&apos;s name, health, mana, and stamina.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point for the resource bar, representing the top-left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the character whose resources are to be displayed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The updated y-coordinate after drawing the resource bar </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/inventory_output.c" line="105" column="5" bodyfile="src/io/output/specific/inventory_output.c" bodystart="105" bodyend="118"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implements outputting to the screen for the inventory mode. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inventory__output_8h" kindref="compound">inventory_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="character_8h" kindref="compound">../../../character/character.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">../../../common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8h" kindref="compound">../../../logging/logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__handler_8h" kindref="compound">../../input/input_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io__handler_8h" kindref="compound">../../io_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="output__handler_8h" kindref="compound">../common/output_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="inventory__output_8c_1a9bd3c11008f5a20187508060fcaf9d90" refkind="member"><highlight class="normal"><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/><ref refid="inventory__output_8c_1a9bd3c11008f5a20187508060fcaf9d90" kindref="member">draw_inventory_view</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>player)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>of<sp/>the<sp/>anchor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>vec<sp/>=<sp/>{anchor.dx,<sp/>anchor.dy};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>character&apos;s<sp/>resource<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.dy<sp/>=<sp/><ref refid="inventory__output_8c_1a8d28bbf9106c02bae93e670cb95312a4" kindref="member">draw_inventory_resource_bar</ref>(vec,<sp/>player);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.dy<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="inventory__output_8c_1a32e269c0a71a1f9fec853f3682e1f89e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inventory__output_8c_1a32e269c0a71a1f9fec853f3682e1f89e" kindref="member">draw_inventory_menu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>menu_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>header_msg,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>menu_options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>menu_option_count,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key_msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tail_msg)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menu_name<sp/>==<sp/>NULL<sp/>||<sp/>menu_options<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Inventory<sp/>Output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Menu<sp/>options<sp/>are<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>vec<sp/>=<sp/>{anchor.dx,<sp/>anchor.dy};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>menu<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(vec.dy,<sp/>1,<sp/>menu_name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.dy++;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>header<sp/>message<sp/>if<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header_msg<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(vec.dy++,<sp/>vec.dx,<sp/>header_msg);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>menu<sp/>items<sp/>highlighting<sp/>the<sp/>selected<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>menu_option_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>selected_index)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>&gt;<sp/>to<sp/>indicate<sp/>selected<sp/>item<sp/>and<sp/>bold<sp/>styling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[MAX_STRING_LENGTH];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>menu_options[i]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>selected<sp/>items,<sp/>use<sp/>inverted<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a09c792afefa9c412b0eb42c83acad1fa" kindref="member">print_text</ref>(vec.dy,<sp/>anchor.dx,<sp/>buffer,<sp/>INVERTED_COLORS);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>regular<sp/>formatting<sp/>for<sp/>non-selected<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[MAX_STRING_LENGTH];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>menu_options[i]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(vec.dy,<sp/>anchor.dx,<sp/>buffer);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.dy++;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>key<sp/>message<sp/>if<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_msg<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(vec.dy<sp/>+<sp/>1,<sp/>vec.dx,<sp/>key_msg);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>tail<sp/>message<sp/>if<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail_msg<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(vec.dy<sp/>+<sp/>2,<sp/>vec.dx,<sp/>tail_msg);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="inventory__output_8c_1abec162193825c157bb1f05ffb528c378" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inventory__output_8c_1abec162193825c157bb1f05ffb528c378" kindref="member">draw_inventory_log</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inventory_log_message)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inventory_log_message<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Inventory<sp/>Output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Given<sp/>inventory<sp/>log<sp/>message<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>log<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(anchor.dy,<sp/>anchor.dx,<sp/>inventory_log_message);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>anchor.dy++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(anchor.dy,<sp/>anchor.dx,<sp/></highlight><highlight class="stringliteral">&quot;Press<sp/>any<sp/>key<sp/>to<sp/>continue...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>anchor.dy++;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>our<sp/>input<sp/>handler<sp/>to<sp/>get<sp/>any<sp/>key<sp/>press</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinput__event__t" kindref="compound">input_event_t</ref><sp/>input_event;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="input__handler_8c_1a0730e0975aa5e78a98a269a46cf62181" kindref="member">get_input_blocking</ref>(&amp;input_event);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="inventory__output_8c_1a8d28bbf9106c02bae93e670cb95312a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inventory__output_8c_1a8d28bbf9106c02bae93e670cb95312a4" kindref="member">draw_inventory_resource_bar</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c_info[MAX_STRING_LENGTH];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(c_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(c_info),<sp/></highlight><highlight class="stringliteral">&quot;%-20s<sp/>|<sp/>HP:<sp/>%4d/%-4d<sp/>|<sp/>Mana:<sp/>%4d/%-4d<sp/>|<sp/>Stamina:<sp/>%4d/%-4d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;name,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;current_resources.health,<sp/>c-&gt;max_resources.health,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;current_resources.mana,<sp/>c-&gt;max_resources.mana,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;current_resources.stamina,<sp/>c-&gt;max_resources.stamina);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>resource<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(anchor.dy,<sp/>anchor.dx,<sp/>c_info);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>anchor.dy++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>anchor.dy;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/io/output/specific/inventory_output.c"/>
  </compounddef>
</doxygen>
