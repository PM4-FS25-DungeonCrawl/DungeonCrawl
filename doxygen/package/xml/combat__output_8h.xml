<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="combat__output_8h" kind="file" language="C++">
    <compoundname>combat_output.h</compoundname>
    <includes refid="character__fw_8h" local="yes">../../../character/character_fw.h</includes>
    <includes refid="common_8h" local="yes">../../../common.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="combat__mode_8c" local="yes">src/combat/combat_mode.c</includedby>
    <includedby refid="combat__output_8c" local="yes">src/io/output/specific/combat_output.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>../../../character/character_fw.h</label>
        <link refid="character__fw_8h"/>
      </node>
      <node id="3">
        <label>../../../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/io/output/specific/combat_output.h</label>
        <link refid="combat__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="5">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="3">
        <label>src/io/output/specific/combat_output.c</label>
        <link refid="combat__output_8c"/>
      </node>
      <node id="1">
        <label>src/io/output/specific/combat_output.h</label>
        <link refid="combat__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="combat__output_8h_1a82e831a8cc98663dddcb03c1d53c8764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
        <definition>vector2d_t draw_combat_view</definition>
        <argsstring>(vector2d_t anchor, const character_t *player, const character_t *enemy, const char *enemy_sprite, int sprite_height, bool red_enemy_sprite)</argsstring>
        <name>draw_combat_view</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>enemy</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enemy_sprite</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sprite_height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>red_enemy_sprite</declname>
        </param>
        <briefdescription>
<para>Draws the combat view UI. </para>
        </briefdescription>
        <detaileddescription>
<para>This function renders the combat view including player and enemy information, as well as the enemy sprite.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the combat view, representing the top left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>The player character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enemy</parametername>
</parameternamelist>
<parameterdescription>
<para>The enemy character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enemy_sprite</parametername>
</parameternamelist>
<parameterdescription>
<para>The sprite of the enemy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sprite_height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the enemy sprite </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>red_enemy_sprite</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the enemy sprite will be drawn in red </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new anchor point after drawing the combat view </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/combat_output.h" line="28" column="12" bodyfile="src/io/output/specific/combat_output.c" bodystart="18" bodyend="43" declfile="src/io/output/specific/combat_output.h" declline="28" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="combat__output_8h_1aeddc5130e2bdd0efa690f82dc0245457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_combat_menu</definition>
        <argsstring>(vector2d_t anchor, const char *menu_name, char **menu_options, int menu_option_count, int selected_index, const char *tail_msg)</argsstring>
        <name>draw_combat_menu</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>menu_name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menu_options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>menu_option_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selected_index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tail_msg</declname>
        </param>
        <briefdescription>
<para>Draws the combat menu. </para>
        </briefdescription>
        <detaileddescription>
<para>This function renders a menu for the combat mode with selectable options.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the combat menu, representing the top left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options of the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu_option_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of options in the menu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selected_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the selected option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tail_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be displayed at the bottom of the menu. If the message is NULL, it will not be displayed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/combat_output.h" line="42" column="6" bodyfile="src/io/output/specific/combat_output.c" bodystart="45" bodyend="63" declfile="src/io/output/specific/combat_output.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="combat__output_8h_1a379d57eb096db30d157ab8060ce6b765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_combat_log</definition>
        <argsstring>(vector2d_t anchor, const char *combat_log_message)</argsstring>
        <name>draw_combat_log</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>combat_log_message</declname>
        </param>
        <briefdescription>
<para>Draws the combat log. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays a combat log message and waits for user input before continuing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point of the combat log, representing the top-left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>combat_log_message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be displayed in the combat log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/combat_output.h" line="52" column="6" bodyfile="src/io/output/specific/combat_output.c" bodystart="65" bodyend="80" declfile="src/io/output/specific/combat_output.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="combat__output_8h_1ab675fce00927cce1769c5373d4f3b4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_game_over</definition>
        <argsstring>(void)</argsstring>
        <name>draw_game_over</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Draws the game over screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays a game over message and waits for user input. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/combat_output.h" line="59" column="6" bodyfile="src/io/output/specific/combat_output.c" bodystart="82" bodyend="93" declfile="src/io/output/specific/combat_output.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="combat__output_8h_1a9c15367131f863ddf5b8b9cb8c4f04ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int draw_resource_bar</definition>
        <argsstring>(vector2d_t anchor, const character_t *c)</argsstring>
        <name>draw_resource_bar</name>
        <param>
          <type><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref></type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draws the resource bar for a character. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays the character&apos;s name, health, mana, and stamina in a formatted bar.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor point for the resource bar, representing the top-left corner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the character whose resources are to be displayed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The updated y-coordinate after drawing the resource bar </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/combat_output.h" line="71" column="5" bodyfile="src/io/output/specific/combat_output.c" bodystart="95" bodyend="111" declfile="src/io/output/specific/combat_output.h" declline="71" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes functions for outputing to the screen while in the combat mode. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMBAT_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMBAT_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="character__fw_8h" kindref="compound">../../../character/character_fw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">../../../common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/><ref refid="combat__output_8h_1a82e831a8cc98663dddcb03c1d53c8764" kindref="member">draw_combat_view</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>player,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>enemy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>enemy_sprite,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sprite_height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>red_enemy_sprite);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="combat__output_8h_1aeddc5130e2bdd0efa690f82dc0245457" kindref="member">draw_combat_menu</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>menu_name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>menu_options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>menu_option_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tail_msg);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="combat__output_8h_1a379d57eb096db30d157ab8060ce6b765" kindref="member">draw_combat_log</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>combat_log_message);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="combat__output_8h_1ab675fce00927cce1769c5373d4f3b4b0" kindref="member">draw_game_over</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="combat__output_8h_1a9c15367131f863ddf5b8b9cb8c4f04ff" kindref="member">draw_resource_bar</ref>(<ref refid="structvector2d__t" kindref="compound">vector2d_t</ref><sp/>anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>c);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>COMBAT_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/io/output/specific/combat_output.h"/>
  </compounddef>
</doxygen>
