<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="wait__output_8c" kind="file" language="C++">
    <compoundname>wait_output.c</compoundname>
    <includes refid="wait__output_8h" local="yes">wait_output.h</includes>
    <includes refid="logger_8h" local="yes">../../../logging/logger.h</includes>
    <includes refid="io__handler_8h" local="yes">../../io_handler.h</includes>
    <includes refid="output__handler_8h" local="yes">../common/output_handler.h</includes>
    <includes refid="media__files_8h" local="yes">../media/media_files.h</includes>
    <includes refid="media__output_8h" local="yes">../media/media_output.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="5">
        <label>../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>input/input_handler.h</label>
        <link refid="input__handler_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>input_types.h</label>
        <link refid="input__types_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../../io_handler.h</label>
        <link refid="io__handler_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>output/common/output_handler.h</label>
        <link refid="output__handler_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../media/media_files.h</label>
        <link refid="media__files_8h"/>
      </node>
      <node id="12">
        <label>output/media/media_output.h</label>
        <link refid="media__output_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>media_output_handler.h</label>
        <link refid="media__output__handler_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/io/output/specific/wait_output.c</label>
        <link refid="wait__output_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wait_output.h</label>
        <link refid="wait__output_8h"/>
      </node>
      <node id="3">
        <label>../../../logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="6">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="9">
        <label>notcurses/notcurses.h</label>
      </node>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="16">
        <label>string.h</label>
      </node>
      <node id="17">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="wait__output_8c_1a81bbb0b5859cfdeced6f3060bcd04a81" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char loading_message[256]</definition>
        <argsstring>[256]</argsstring>
        <name>loading_message</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/wait_output.c" line="24" column="13" bodyfile="src/io/output/specific/wait_output.c" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="wait__output_8c_1a633ad329c9d4bbc85e167c14d69d86a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_loading_screen</definition>
        <argsstring>(const char *text)</argsstring>
        <name>draw_loading_screen</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Draw a loading screen with animation. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays a loading screen with the specified message and a simple animation to indicate progress.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to display on the loading screen </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/wait_output.c" line="28" column="6" bodyfile="src/io/output/specific/wait_output.c" bodystart="28" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="wait__output_8c_1a4d088844951d67f0ba31dc7da59ce15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_launch_screen</definition>
        <argsstring>(void)</argsstring>
        <name>draw_launch_screen</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Draw the launch screen with title and animation. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays the game launch screen with title, version, copyright information, and a loading animation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/wait_output.c" line="66" column="6" bodyfile="src/io/output/specific/wait_output.c" bodystart="66" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="wait__output_8c_1a2c658aa459451809549a584cc482f854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_welcome_screen</definition>
        <argsstring>(void)</argsstring>
        <name>draw_welcome_screen</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Draw the welcome screen with a message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays a welcome message on the screen and prompts the user to press any key to continue. It&apos;s typically shown after the launch screen animation completes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/specific/wait_output.c" line="120" column="6" bodyfile="src/io/output/specific/wait_output.c" bodystart="120" bodyend="148"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation for drawing the loading screen. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wait__output_8h" kindref="compound">wait_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8h" kindref="compound">../../../logging/logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io__handler_8h" kindref="compound">../../io_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="output__handler_8h" kindref="compound">../common/output_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="media__files_8h" kindref="compound">../media/media_files.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="media__output_8h" kindref="compound">../media/media_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>platform-specific<sp/>headers<sp/>for<sp/>sleep<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="comment">//<sp/>For<sp/>usleep<sp/>on<sp/>Unix/Linux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;windows.h&gt;</highlight><highlight class="comment">//<sp/>For<sp/>Sleep<sp/>on<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loading<sp/>screen<sp/>message<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>loading_message[256]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Attention<sp/>multiple<sp/>pre-declaration!<sp/>io_handler.h<sp/>&amp;<sp/>wait_output.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="wait__output_8c_1a633ad329c9d4bbc85e167c14d69d86a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wait__output_8c_1a633ad329c9d4bbc85e167c14d69d86a2" kindref="member">draw_loading_screen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!text)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8c_1aa70df4f70b7969a40b70fda659005550" kindref="member">log_msg</ref>(ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Wait<sp/>Output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>screen<sp/>text<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(loading_message,<sp/>text,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(loading_message)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>loading_message[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(loading_message)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>screen<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a4dcd19daec1563adb660a42885d97b75" kindref="member">get_screen_dimensions</ref>(&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>loading<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_len<sp/>=<sp/>strlen(loading_message);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_x<sp/>=<sp/>(width<sp/>-<sp/>msg_len)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_y<sp/>=<sp/>height<sp/>/<sp/>2<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(msg_y,<sp/>msg_x,<sp/>loading_message);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>simple<sp/>loading<sp/>animation<sp/>based<sp/>on<sp/>the<sp/>current<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>(frame<sp/>+<sp/>1)<sp/>%<sp/>4;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>anim[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;|/-\\|/-\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>animation_str[2]<sp/>=<sp/>{anim[frame],<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(msg_y<sp/>+<sp/>2,<sp/>width<sp/>/<sp/>2,<sp/>animation_str);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame<sp/>using<sp/>centralized<sp/>IO<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="wait__output_8c_1a4d088844951d67f0ba31dc7da59ce15e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wait__output_8c_1a4d088844951d67f0ba31dc7da59ce15e" kindref="member">draw_launch_screen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>screen<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a4dcd19daec1563adb660a42885d97b75" kindref="member">get_screen_dimensions</ref>(&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>game<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DUNGEON<sp/>CRAWL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>title_len<sp/>=<sp/>strlen(title);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>title_x<sp/>=<sp/>(width<sp/>-<sp/>title_len)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>title_y<sp/>=<sp/>height<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>title<sp/>with<sp/>a<sp/>special<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a09c792afefa9c412b0eb42c83acad1fa" kindref="member">print_text</ref>(title_y,<sp/>title_x,<sp/>title,<sp/>RED_TEXT_COLORS);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>version<sp/>and<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>version<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/>1.0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>copyright<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(C)<sp/>2025<sp/>DungeonCrawl<sp/>Team&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version_len<sp/>=<sp/>strlen(version);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copyright_len<sp/>=<sp/>strlen(copyright);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version_x<sp/>=<sp/>(width<sp/>-<sp/>version_len)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copyright_x<sp/>=<sp/>(width<sp/>-<sp/>copyright_len)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(title_y<sp/>+<sp/>2,<sp/>version_x,<sp/>version);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(title_y<sp/>+<sp/>3,<sp/>copyright_x,<sp/>copyright);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>loading<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>loading_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>game...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loading_len<sp/>=<sp/>strlen(loading_msg);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>simple<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>(frame<sp/>+<sp/>1)<sp/>%<sp/>4;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>anim[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;|/-\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>animation_str[32];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(animation_str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(animation_str),<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%c&quot;</highlight><highlight class="normal">,<sp/>loading_msg,<sp/>anim[frame]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(height<sp/>-<sp/>5,<sp/>(width<sp/>-<sp/>loading_len<sp/>-<sp/>2)<sp/>/<sp/>2,<sp/>animation_str);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame<sp/>using<sp/>centralized<sp/>IO<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sleep<sp/>for<sp/>a<sp/>short<sp/>duration<sp/>to<sp/>control<sp/>the<sp/>animation<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(50000);</highlight><highlight class="comment">//<sp/>50ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="wait__output_8c_1a2c658aa459451809549a584cc482f854" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wait__output_8c_1a2c658aa459451809549a584cc482f854" kindref="member">draw_welcome_screen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>screen<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a4dcd19daec1563adb660a42885d97b75" kindref="member">get_screen_dimensions</ref>(&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>welcome<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>welcome_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>Dungeon<sp/>Crawl!<sp/>Press<sp/>any<sp/>key<sp/>to<sp/>continue...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_len<sp/>=<sp/>strlen(welcome_msg);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_x<sp/>=<sp/>(width<sp/>-<sp/>msg_len)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_y<sp/>=<sp/>height<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a1e09f2e647d1eea643c22b2e0205590d" kindref="member">print_text_default</ref>(msg_y,<sp/>msg_x,<sp/>welcome_msg);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>image<sp/>stretched<sp/>to<sp/>specific<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="media__output_8c_1a819ae412791d36ed7d0d7aeec1315f82" kindref="member">display_image_at</ref>(GOBLIN_PNG,<sp/>20,<sp/>msg_y<sp/>-<sp/>10,<sp/>20,<sp/>25,<sp/>SCALE_STRETCH);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>frame<sp/>using<sp/>centralized<sp/>IO<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="output__handler_8c_1a3e18b0ae03162818f0410141b4c5ecde" kindref="member">render_frame</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinput__event__t" kindref="compound">input_event_t</ref><sp/>input_event;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="input__handler_8c_1a0730e0975aa5e78a98a269a46cf62181" kindref="member">get_input_blocking</ref>(&amp;input_event);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen<sp/>after<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>media_cleanup();</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/io/output/specific/wait_output.c"/>
  </compounddef>
</doxygen>
