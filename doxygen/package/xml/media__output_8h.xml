<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="media__output_8h" kind="file" language="C++">
    <compoundname>media_output.h</compoundname>
    <includes refid="media__output__handler_8h" local="yes">media_output_handler.h</includes>
    <includes local="no">notcurses/notcurses.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="io__handler_8c" local="yes">src/io/io_handler.c</includedby>
    <includedby refid="io__handler_8h" local="yes">src/io/io_handler.h</includedby>
    <includedby refid="media__output_8c" local="yes">src/io/output/media/media_output.c</includedby>
    <includedby refid="combat__output_8c" local="yes">src/io/output/specific/combat_output.c</includedby>
    <includedby refid="wait__output_8c" local="yes">src/io/output/specific/wait_output.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/io/output/media/media_output.h</label>
        <link refid="media__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>media_output_handler.h</label>
        <link refid="media__output__handler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>notcurses/notcurses.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="5">
        <label>src/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="6">
        <label>src/io/input/input_handler.c</label>
        <link refid="input__handler_8c"/>
      </node>
      <node id="2">
        <label>src/io/io_handler.c</label>
        <link refid="io__handler_8c"/>
      </node>
      <node id="3">
        <label>src/io/io_handler.h</label>
        <link refid="io__handler_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/io/output/common/output_handler.c</label>
        <link refid="output__handler_8c"/>
      </node>
      <node id="8">
        <label>src/io/output/media/media_output.c</label>
        <link refid="media__output_8c"/>
      </node>
      <node id="1">
        <label>src/io/output/media/media_output.h</label>
        <link refid="media__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/io/output/media/media_output_handler.c</label>
        <link refid="media__output__handler_8c"/>
      </node>
      <node id="10">
        <label>src/io/output/specific/combat_output.c</label>
        <link refid="combat__output_8c"/>
      </node>
      <node id="11">
        <label>src/io/output/specific/inventory_output.c</label>
        <link refid="inventory__output_8c"/>
      </node>
      <node id="12">
        <label>src/io/output/specific/map_output.c</label>
        <link refid="map__output_8c"/>
      </node>
      <node id="13">
        <label>src/io/output/specific/stats_output.c</label>
        <link refid="stats__output_8c"/>
      </node>
      <node id="14">
        <label>src/io/output/specific/wait_output.c</label>
        <link refid="wait__output_8c"/>
      </node>
      <node id="15">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="16">
        <label>src/map/map_mode.c</label>
        <link refid="map__mode_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="media__output_8h_1a819ae412791d36ed7d0d7aeec1315f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_image_at</definition>
        <argsstring>(const char *filename, int x, int y, int height, int width, scale_type_t scale_type)</argsstring>
        <name>display_image_at</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>scale_type_t</type>
          <declname>scale_type</declname>
        </param>
        <briefdescription>
<para>Display an image file at specified coordinates with scaling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Image file name (PNG supported, loaded from src/art/png/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in terminal cells (0 for auto) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling mode to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="28" column="6" bodyfile="src/io/output/media/media_output.c" bodystart="32" bodyend="45" declfile="src/io/output/media/media_output.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1ae4661d7e30c3f0cb561cf43755e1881c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_image_background</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>display_image_background</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Fill the background with an image file scaled to terminal size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Image file name (PNG supported, loaded from src/art/png/) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="36" column="6" declfile="src/io/output/media/media_output.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1a20b852ce150de9d23792b17e3a905c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_image_cell</definition>
        <argsstring>(const char *filename, int x, int y)</argsstring>
        <name>display_image_cell</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Fill a single terminal cell with an image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Image file name (PNG supported, loaded from src/art/png/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="46" column="6" bodyfile="src/io/output/media/media_output.c" bodystart="54" bodyend="66" declfile="src/io/output/media/media_output.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1aa8dd28c1c6d8b4af8e4747b88733e55f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_gif_at</definition>
        <argsstring>(const char *filename, int x, int y, int height, int width, scale_type_t scale_type, float fps, bool loop)</argsstring>
        <name>display_gif_at</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>scale_type_t</type>
          <declname>scale_type</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Display an animation file at specified coordinates with scaling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Animation file name (GIF supported, loaded from src/art/gif/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in terminal cells (0 for auto) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scaling</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling mode to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fps</parametername>
</parameternamelist>
<parameterdescription>
<para>Frames per second </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to loop the animation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="65" column="6" declfile="src/io/output/media/media_output.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1a502ad20244366a7ada0be6a6747498ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_gif_background</definition>
        <argsstring>(const char *filename, float fps, bool loop)</argsstring>
        <name>display_gif_background</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Fill the background with an animation file scaled to terminal size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Animation file name (GIF supported, loaded from src/art/gif/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fps</parametername>
</parameternamelist>
<parameterdescription>
<para>Frames per second </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to loop the animation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="75" column="6" declfile="src/io/output/media/media_output.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1afbbc036c906edde6967cad42f025279d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_video_at</definition>
        <argsstring>(const char *filename, int x, int y, int width, int height, scale_type_t scale)</argsstring>
        <name>display_video_at</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>scale_type_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Display a video file at specified coordinates with scaling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Video file name (MP4 supported, loaded from src/art/mp4/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling mode to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="88" column="6" declfile="src/io/output/media/media_output.h" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1a53908298b84750a423b2edda52a65bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_video_background</definition>
        <argsstring>(const char *filename, float fps, bool loop)</argsstring>
        <name>display_video_background</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Fill the background with a video file scaled to terminal size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Video file name (MP4 supported, loaded from src/art/mp4/) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fps</parametername>
</parameternamelist>
<parameterdescription>
<para>Frames per second </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to loop the video </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="98" column="6" declfile="src/io/output/media/media_output.h" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1ad13cd49b036f9b7d6c897359223b1fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void media_output_play</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>media_output_play</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Start playback of an animation or video Note: This does not handle actual timing, which must be done in the game loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a loaded media instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="109" column="6" declfile="src/io/output/media/media_output.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1a43f2eaaa147b6a7de63a2b722618ed13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void media_output_pause</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>media_output_pause</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Pause playback of an animation or video. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a loaded media instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="115" column="6" declfile="src/io/output/media/media_output.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output_8h_1acbe1153f220380e2b8718734dc45dd6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void media_output_reset</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>media_output_reset</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Reset animation or video to the beginning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a loaded media instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output.h" line="121" column="6" declfile="src/io/output/media/media_output.h" declline="121" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes functions for drawing to the screen. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIA_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIA_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="media__output__handler_8h" kindref="compound">media_output_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;notcurses/notcurses.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>IMAGE<sp/>DISPLAY<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1a819ae412791d36ed7d0d7aeec1315f82" kindref="member">display_image_at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>scale_type_t<sp/>scale_type);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="media__output_8h_1ae4661d7e30c3f0cb561cf43755e1881c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1ae4661d7e30c3f0cb561cf43755e1881c" kindref="member">display_image_background</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1a20b852ce150de9d23792b17e3a905c1c" kindref="member">display_image_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>ANIMATION<sp/>DISPLAY<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="media__output_8h_1aa8dd28c1c6d8b4af8e4747b88733e55f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1aa8dd28c1c6d8b4af8e4747b88733e55f" kindref="member">display_gif_at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>scale_type_t<sp/>scale_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="media__output_8h_1a502ad20244366a7ada0be6a6747498ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1a502ad20244366a7ada0be6a6747498ee" kindref="member">display_gif_background</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="media__output_8h_1afbbc036c906edde6967cad42f025279d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1afbbc036c906edde6967cad42f025279d" kindref="member">display_video_at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>scale_type_t<sp/>scale);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="media__output_8h_1a53908298b84750a423b2edda52a65bd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1a53908298b84750a423b2edda52a65bd6" kindref="member">display_video_background</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>ANIMATION<sp/>CONTROL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="media__output_8h_1ad13cd49b036f9b7d6c897359223b1fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1ad13cd49b036f9b7d6c897359223b1fd8" kindref="member">media_output_play</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="media__output_8h_1a43f2eaaa147b6a7de63a2b722618ed13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1a43f2eaaa147b6a7de63a2b722618ed13" kindref="member">media_output_pause</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="media__output_8h_1acbe1153f220380e2b8718734dc45dd6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output_8h_1acbe1153f220380e2b8718734dc45dd6d" kindref="member">media_output_reset</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>MEDIA_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/io/output/media/media_output.h"/>
  </compounddef>
</doxygen>
