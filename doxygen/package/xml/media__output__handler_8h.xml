<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="media__output__handler_8h" kind="file" language="C++">
    <compoundname>media_output_handler.h</compoundname>
    <includes local="no">notcurses/notcurses.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="io__handler_8c" local="yes">src/io/io_handler.c</includedby>
    <includedby refid="media__output_8c" local="yes">src/io/output/media/media_output.c</includedby>
    <includedby refid="media__output_8h" local="yes">src/io/output/media/media_output.h</includedby>
    <includedby refid="media__output__handler_8c" local="yes">src/io/output/media/media_output_handler.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/io/output/media/media_output_handler.h</label>
        <link refid="media__output__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>notcurses/notcurses.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="7">
        <label>src/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="8">
        <label>src/io/input/input_handler.c</label>
        <link refid="input__handler_8c"/>
      </node>
      <node id="2">
        <label>src/io/io_handler.c</label>
        <link refid="io__handler_8c"/>
      </node>
      <node id="5">
        <label>src/io/io_handler.h</label>
        <link refid="io__handler_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/io/output/common/output_handler.c</label>
        <link refid="output__handler_8c"/>
      </node>
      <node id="3">
        <label>src/io/output/media/media_output.c</label>
        <link refid="media__output_8c"/>
      </node>
      <node id="4">
        <label>src/io/output/media/media_output.h</label>
        <link refid="media__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/io/output/media/media_output_handler.c</label>
        <link refid="media__output__handler_8c"/>
      </node>
      <node id="1">
        <label>src/io/output/media/media_output_handler.h</label>
        <link refid="media__output__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/io/output/specific/combat_output.c</label>
        <link refid="combat__output_8c"/>
      </node>
      <node id="12">
        <label>src/io/output/specific/inventory_output.c</label>
        <link refid="inventory__output_8c"/>
      </node>
      <node id="13">
        <label>src/io/output/specific/map_output.c</label>
        <link refid="map__output_8c"/>
      </node>
      <node id="14">
        <label>src/io/output/specific/stats_output.c</label>
        <link refid="stats__output_8c"/>
      </node>
      <node id="15">
        <label>src/io/output/specific/wait_output.c</label>
        <link refid="wait__output_8c"/>
      </node>
      <node id="16">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="17">
        <label>src/map/map_mode.c</label>
        <link refid="map__mode_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structloaded__visual__s" prot="public">loaded_visual_s</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552" prot="public" static="no" strong="no">
        <type></type>
        <name>scale_type_t</name>
        <enumvalue id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552a1f362a7e92248402118e613c673f6f5b" prot="public">
          <name>SCALE_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552a36b837ba76d00a964cb0994e4b2102bd" prot="public">
          <name>SCALE_PRESERVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552a4fae5d00a21cbc569604f80ba5263f1d" prot="public">
          <name>SCALE_STRETCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552a5c60b7a6f884cfbb888c42a408f4bbd6" prot="public">
          <name>SCALE_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a0a7feabf771a43c07ac5bc9883552552a3353fe825fc4af4f7205304c35365c88" prot="public">
          <name>SCALE_FULLSCREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="12" column="1" bodyfile="src/io/output/media/media_output_handler.h" bodystart="12" bodyend="18"/>
      </memberdef>
      <memberdef kind="enum" id="media__output__handler_8h_1a40c9240b64462ca76d1fd7416b8e19f2" prot="public" static="no" strong="no">
        <type></type>
        <name>media_type_t</name>
        <enumvalue id="media__output__handler_8h_1a40c9240b64462ca76d1fd7416b8e19f2a3e22e84ce80c5b76f1c52ba62a9bc0f4" prot="public">
          <name>MEDIA_PNG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a40c9240b64462ca76d1fd7416b8e19f2aaed5d33e62e9a3bc97ce16c42b70b40c" prot="public">
          <name>MEDIA_GIF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a40c9240b64462ca76d1fd7416b8e19f2a4b557ff0c9458a6472127ffab05df2f6" prot="public">
          <name>MEDIA_MP4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a40c9240b64462ca76d1fd7416b8e19f2af5824c98087249b2a178aa0fdd89fb57" prot="public">
          <name>MEDIA_UNSUPPORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="21" column="1" bodyfile="src/io/output/media/media_output_handler.h" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12" prot="public" static="no" strong="no">
        <type></type>
        <name>media_blitter</name>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12aada2891695680ff53c2081e89f6e5359" prot="public">
          <name>MEDIA_BLITTER_DEFAULT</name>
          <initializer>= NCBLIT_DEFAULT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12add494e01a2e96b53d7efd119ad9b459a" prot="public">
          <name>MEDIA_BLITTER_ASCII</name>
          <initializer>= NCBLIT_1x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12a12c1979e24d081bd2a6f9850c4201791" prot="public">
          <name>MEDIA_BLITTER_HALF</name>
          <initializer>= NCBLIT_2x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12a3bce7b4eedc9c6600d61339e51deca44" prot="public">
          <name>MEDIA_BLITTER_QUAD</name>
          <initializer>= NCBLIT_2x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12ad54d0437ffd2c24f5cda0ab3b24058d4" prot="public">
          <name>MEDIA_BLITTER_BRAILLE</name>
          <initializer>= NCBLIT_BRAILLE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12a30aecb9167b6bf2f5e3a234d6102e159" prot="public">
          <name>MEDIA_BLITTER_PIXEL</name>
          <initializer>= NCBLIT_PIXEL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Media blitter options (rendering method) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="31" column="1" bodyfile="src/io/output/media/media_output_handler.h" bodystart="31" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="media__output__handler_8h_1a8ac6086bbd94024273d0f8902cd89d88" prot="public" static="no">
        <type>enum <ref refid="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12" kindref="member">media_blitter</ref></type>
        <definition>typedef enum media_blitter media_blitter_t</definition>
        <argsstring></argsstring>
        <name>media_blitter_t</name>
        <briefdescription>
<para>Media blitter options (rendering method) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="38" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" prot="public" static="no">
        <type>struct <ref refid="structloaded__visual__s" kindref="compound">loaded_visual_s</ref></type>
        <definition>typedef struct loaded_visual_s loaded_visual_t</definition>
        <argsstring></argsstring>
        <name>loaded_visual_t</name>
        <briefdescription>
<para>Structure to represent a loaded visual. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an opaque structure that encapsulates a Notcurses visual. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="61" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="media__output__handler_8h_1aa376cccfe9485c0da2bf40fad30a585d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool init_media_output</definition>
        <argsstring>(void)</argsstring>
        <name>init_media_output</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the media output handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be called after the common output handler is initialized.</para>
<para><simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="74" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="37" bodyend="59" declfile="src/io/output/media/media_output_handler.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a6c7bc02dff5465c7a2f34517d9e4f36b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shutdown_media_output</definition>
        <argsstring>(void)</argsstring>
        <name>shutdown_media_output</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shutdown the media output handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up resources used by the media output handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="81" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="62" bodyend="64" declfile="src/io/output/media/media_output_handler.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a7281bb34b0551202de2396e2ed1b8bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void media_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>media_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="88" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="66" bodyend="74" declfile="src/io/output/media/media_output_handler.h" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a3d56ebacef1032e3d319d361a1409998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroy_media</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>destroy_media</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Frees the memory associated with a loaded media resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the loaded media instance to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="95" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="76" bodyend="78" declfile="src/io/output/media/media_output_handler.h" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a8c705311581ff5688337996fc1e05a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool refresh_media_display</definition>
        <argsstring>(void)</argsstring>
        <name>refresh_media_display</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Force a refresh of the media display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool indicating success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="102" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="81" bodyend="92" declfile="src/io/output/media/media_output_handler.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1af0661cab798fd62c3a6357049f912ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
        <definition>loaded_visual_t * load_media</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>load_media</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>load a media resource from file they can be different types (PNG, GIF, MP4) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to load </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a loaded visual instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="115" column="17" bodyfile="src/io/output/media/media_output_handler.c" bodystart="99" bodyend="224" declfile="src/io/output/media/media_output_handler.h" declline="115" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1aba372d06ffef1f95c9dc4d2c88d4dd89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
        <definition>loaded_visual_t * ready_media</definition>
        <argsstring>(const char *filename, int x, int y, int height, int width, scale_type_t scale_type)</argsstring>
        <name>ready_media</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>scale_type_t</type>
          <declname>scale_type</declname>
        </param>
        <briefdescription>
<para>Prepares a media resource for display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to load </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in terminal cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in terminal cells (0 for auto) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling type to apply </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a loaded visual instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="128" column="17" bodyfile="src/io/output/media/media_output_handler.c" bodystart="226" bodyend="262" declfile="src/io/output/media/media_output_handler.h" declline="128" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a9117f92f942a67aa43dffed230b656b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool unload_media</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>unload_media</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Unload a specific media resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to unload </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="140" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="269" bodyend="290" declfile="src/io/output/media/media_output_handler.h" declline="140" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1aa70880fe7104c86db5e168fa19d905b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool preload_media</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>preload_media</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Preload a media file into memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to preload </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="148" column="6" declfile="src/io/output/media/media_output_handler.h" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1ab0e89e5d3fd82509933032efb937a3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool reload_media_after_resize</definition>
        <argsstring>(void)</argsstring>
        <name>reload_media_after_resize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reload media after terminal resize. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="155" column="6" declfile="src/io/output/media/media_output_handler.h" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a9f9238aa9bc750b0feeadf0cfa944497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool media_output_render</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>media_output_render</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Display a loaded media file on its assigned plane. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a loaded media instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="167" column="6" declfile="src/io/output/media/media_output_handler.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a6f388ac47305f31e5c66e55413a0dce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool media_output_render_next_frame</definition>
        <argsstring>(loaded_visual_t *media)</argsstring>
        <name>media_output_render_next_frame</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>media</declname>
        </param>
        <briefdescription>
<para>Display the next frame of an animation or video. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a loaded media instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure or end of media </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="174" column="6" declfile="src/io/output/media/media_output_handler.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a6367e9a5fe5ba121cee6317786dcf4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool media_output_can_display_images</definition>
        <argsstring>(void)</argsstring>
        <name>media_output_can_display_images</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if the notcurses implementation supports image loading. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if supported, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="180" column="6" declfile="src/io/output/media/media_output_handler.h" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a89326dad6b1bd8432c39289074598b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool media_output_can_display_videos</definition>
        <argsstring>(void)</argsstring>
        <name>media_output_can_display_videos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if the notcurses implementation supports video loading. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if supported, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="186" column="6" declfile="src/io/output/media/media_output_handler.h" declline="186" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1ada15bd9b25aefff85111dc284146407d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup_scaling_options</definition>
        <argsstring>(loaded_visual_t *visual, scale_type_t scale_type, int target_width, int target_height)</argsstring>
        <name>setup_scaling_options</name>
        <param>
          <type><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref> *</type>
          <declname>visual</declname>
        </param>
        <param>
          <type>scale_type_t</type>
          <declname>scale_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>target_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>target_height</declname>
        </param>
        <briefdescription>
<para>Enable different scaling options for the loaded visual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visual</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the loaded visual instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling type to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width to scale to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height to scale to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="200" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="333" bodyend="392" declfile="src/io/output/media/media_output_handler.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1ac89546b79ca74e0e5b71a10f344597a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool directory_exists</definition>
        <argsstring>(const char *path)</argsstring>
        <name>directory_exists</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>checks if a directory exists </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="211" column="6" declfile="src/io/output/media/media_output_handler.h" declline="211" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a0b791e34c4561ffab7cfab81d81a46af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_type_t</type>
        <definition>media_type_t get_file_type</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>get_file_type</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Get the media type based on the file extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Media type (PNG, GIF, MP4, or UNSUPPORTED) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="219" column="14" bodyfile="src/io/output/media/media_output_handler.c" bodystart="403" bodyend="414" declfile="src/io/output/media/media_output_handler.h" declline="219" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1aecd19c19a69456c91f413ed73a61b0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_file_extension</definition>
        <argsstring>(const char *filename, const char *extension)</argsstring>
        <name>is_file_extension</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Check if a filename has a specific extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extension</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension to check for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file has the specified extension, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="228" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="417" bodyend="430" declfile="src/io/output/media/media_output_handler.h" declline="228" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="media__output__handler_8h_1a2f8960151a697ff81f92506f7b1baf01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * build_filepath</definition>
        <argsstring>(const char *filename, media_type_t media_type)</argsstring>
        <name>build_filepath</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>media_type_t</type>
          <declname>media_type</declname>
        </param>
        <briefdescription>
<para>Build a file path for the specified media type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File name to build the path for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>media_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of media (PNG, GIF, MP4) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the constructed file path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/output/media/media_output_handler.h" line="237" column="6" bodyfile="src/io/output/media/media_output_handler.c" bodystart="433" bodyend="461" declfile="src/io/output/media/media_output_handler.h" declline="237" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes functions for the media output handler. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIA_OUTPUT_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIA_OUTPUT_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;notcurses/notcurses.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale<sp/>types<sp/>for<sp/>display<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALE_NONE,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>scaling,<sp/>use<sp/>original<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALE_PRESERVE,<sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>preserving<sp/>aspect<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALE_STRETCH,<sp/><sp/></highlight><highlight class="comment">//<sp/>Stretch<sp/>to<sp/>exact<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALE_CELL,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>to<sp/>fit<sp/>in<sp/>a<sp/>single<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALE_FULLSCREEN</highlight><highlight class="comment">//<sp/>Scale<sp/>to<sp/>fill<sp/>the<sp/>entire<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}<sp/>scale_type_t;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Media<sp/>types<sp/>enumeration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_PNG,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_GIF,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_MP4,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_UNSUPPORTED</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/>media_type_t;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a43f80e9bd49a8703019b5657889b9f12" kindref="member">media_blitter</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_DEFAULT<sp/>=<sp/>NCBLIT_DEFAULT,</highlight><highlight class="comment">//<sp/>Use<sp/>terminal&apos;s<sp/>best<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_ASCII<sp/>=<sp/>NCBLIT_1x1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ASCII<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_HALF<sp/>=<sp/>NCBLIT_2x1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>half<sp/>blocks<sp/>(▀<sp/>▄)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_QUAD<sp/>=<sp/>NCBLIT_2x2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>quadrant<sp/>blocks<sp/>(▖<sp/>▗<sp/>▘<sp/>▙)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_BRAILLE<sp/>=<sp/>NCBLIT_BRAILLE,</highlight><highlight class="comment">//<sp/>Use<sp/>braille<sp/>(⠀⠁⠂⠃...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>MEDIA_BLITTER_PIXEL<sp/>=<sp/>NCBLIT_PIXEL,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>pixel<sp/>graphics<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="media__output__handler_8h_1a8ac6086bbd94024273d0f8902cd89d88" refkind="member"><highlight class="normal">}<sp/><ref refid="media__output__handler_8h_1a8ac6086bbd94024273d0f8902cd89d88" kindref="member">media_blitter_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CONSTANTS<sp/>AND<sp/>DEFINITIONS</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structloaded__visual__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structloaded__visual__s" kindref="compound">loaded_visual_s</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ncvisual*<sp/>visual;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Notcurses<sp/>visual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ncplane*<sp/>plane;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>plane<sp/>for<sp/>rendering<sp/>the<sp/>visual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ncvisual_options<sp/>options;</highlight><highlight class="comment">//<sp/>Display<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>media_type_t<sp/>media_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>of<sp/>media<sp/>(PNG,<sp/>GIF,<sp/>MP4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>og_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>og_height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>frames<sp/>(for<sp/>animations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_playing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>an<sp/>animation<sp/>is<sp/>currently<sp/>playing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_loaded;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>the<sp/>visual<sp/>is<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>to<sp/>the<sp/>file<sp/>(for<sp/>reloading)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" refkind="member"><highlight class="normal">}<sp/><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>INITIALIZATION<sp/>AND<sp/>CLEANUP</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1aa376cccfe9485c0da2bf40fad30a585d" kindref="member">init_media_output</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a6c7bc02dff5465c7a2f34517d9e4f36b" kindref="member">shutdown_media_output</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Clean<sp/>up<sp/>all<sp/>loaded<sp/>media<sp/>resources</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>Frees<sp/>all<sp/>loaded<sp/>media<sp/>resources<sp/>and<sp/>resets<sp/>the<sp/>handler.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>media_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a3d56ebacef1032e3d319d361a1409998" kindref="member">destroy_media</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a8c705311581ff5688337996fc1e05a23" kindref="member">refresh_media_display</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>LOAD<sp/>AND<sp/>READY<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/><ref refid="media__output__handler_8h_1af0661cab798fd62c3a6357049f912ee1" kindref="member">load_media</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/><ref refid="media__output__handler_8h_1aba372d06ffef1f95c9dc4d2c88d4dd89" kindref="member">ready_media</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>scale_type_t<sp/>scale_type);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>RESOURCE<sp/>MANAGEMENT<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a9117f92f942a67aa43dffed230b656b7" kindref="member">unload_media</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="media__output__handler_8h_1aa70880fe7104c86db5e168fa19d905b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1aa70880fe7104c86db5e168fa19d905b4" kindref="member">preload_media</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="media__output__handler_8h_1ab0e89e5d3fd82509933032efb937a3b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1ab0e89e5d3fd82509933032efb937a3b2" kindref="member">reload_media_after_resize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>REENDERING<sp/>AND<sp/>DISPLAY<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="media__output__handler_8h_1a9f9238aa9bc750b0feeadf0cfa944497" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a9f9238aa9bc750b0feeadf0cfa944497" kindref="member">media_output_render</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="media__output__handler_8h_1a6f388ac47305f31e5c66e55413a0dce0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a6f388ac47305f31e5c66e55413a0dce0" kindref="member">media_output_render_next_frame</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>media);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="media__output__handler_8h_1a6367e9a5fe5ba121cee6317786dcf4c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a6367e9a5fe5ba121cee6317786dcf4c1" kindref="member">media_output_can_display_images</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="media__output__handler_8h_1a89326dad6b1bd8432c39289074598b07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1a89326dad6b1bd8432c39289074598b07" kindref="member">media_output_can_display_videos</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>SCALING<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1ada15bd9b25aefff85111dc284146407d" kindref="member">setup_scaling_options</ref>(<ref refid="media__output__handler_8h_1abcfe9076ce1aec55ed7f3227a1afed1e" kindref="member">loaded_visual_t</ref>*<sp/>visual,<sp/>scale_type_t<sp/>scale_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_height);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>FILE<sp/>AND<sp/>PATH<sp/>HANDLING<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="media__output__handler_8h_1ac89546b79ca74e0e5b71a10f344597a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1ac89546b79ca74e0e5b71a10f344597a3" kindref="member">directory_exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">media_type_t<sp/><ref refid="media__output__handler_8h_1a0b791e34c4561ffab7cfab81d81a46af" kindref="member">get_file_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="media__output__handler_8h_1aecd19c19a69456c91f413ed73a61b0e1" kindref="member">is_file_extension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="media__output__handler_8h_1a2f8960151a697ff81f92506f7b1baf01" kindref="member">build_filepath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/>media_type_t<sp/>media_type);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MEDIA_OUTPUT_HANDLER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/io/output/media/media_output_handler.h"/>
  </compounddef>
</doxygen>
