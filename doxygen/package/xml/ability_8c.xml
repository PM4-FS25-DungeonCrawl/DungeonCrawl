<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="ability_8c" kind="file" language="C++">
    <compoundname>ability.c</compoundname>
    <includes refid="ability_8h" local="yes">ability.h</includes>
    <includes refid="ability__database_8h" local="yes">../database/game/ability_database.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="7">
        <label>../../include/sqlite3.h</label>
      </node>
      <node id="9">
        <label>../character/character_fw.h</label>
        <link refid="character__fw_8h"/>
      </node>
      <node id="1">
        <label>src/combat/ability.c</label>
        <link refid="ability_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ability.h</label>
        <link refid="ability_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ability_fw.h</label>
        <link refid="ability__fw_8h"/>
      </node>
      <node id="8">
        <label>damage.h</label>
        <link refid="damage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../database/database.h</label>
        <link refid="database_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../database/game/ability_database.h</label>
        <link refid="ability__database_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="5">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ability_8c_1a3a754887b3c38533f740a7e840a839d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_ability</definition>
        <argsstring>(ability_t *ability, char *name, const int roll_amount, const int accuracy, const int resource_cost, const dice_size_t dice_size, const damage_type_t damage_type)</argsstring>
        <name>init_ability</name>
        <param>
          <type><ref refid="structability__t" kindref="compound">ability_t</ref> *</type>
          <declname>ability</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>roll_amount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accuracy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>resource_cost</declname>
        </param>
        <param>
          <type>dice_size_t</type>
          <declname>dice_size</declname>
        </param>
        <param>
          <type>damage_type_t</type>
          <declname>damage_type</declname>
        </param>
        <briefdescription>
<para>Initializes an ability with the given parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ability</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the ability. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roll_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of dice to roll. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Accuracy of the ability. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resource_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource cost of the ability. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dice_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the dice used for rolling damage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damage_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of damage dealt by the ability. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/combat/ability.c" line="62" column="6" bodyfile="src/combat/ability.c" bodystart="62" bodyend="72" declfile="src/combat/ability.c" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ability_8c_1ab7a141920ca0b319993d2a758043f43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structability__table__t" kindref="compound">ability_table_t</ref> *</type>
        <definition>ability_table_t * init_ability_table</definition>
        <argsstring>(memory_pool_t *memory_pool, const db_connection_t *db_connection)</argsstring>
        <name>init_ability_table</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type>const <ref refid="structdb__connection__t" kindref="compound">db_connection_t</ref> *</type>
          <declname>db_connection</declname>
        </param>
        <briefdescription>
<para>Initialize the ability table, allocates memory and returns the pointer to the table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool for allocation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_connection</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the database connection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the ability table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/combat/ability.c" line="16" column="17" bodyfile="src/combat/ability.c" bodystart="16" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="ability_8c_1aa23c1120061449449c0eed4b93ddbd7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_ability_table</definition>
        <argsstring>(memory_pool_t *memory_pool, ability_table_t *table)</argsstring>
        <name>free_ability_table</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type><ref refid="structability__table__t" kindref="compound">ability_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Free the ability table, deallocates memory in the memory pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool for deallocation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability table to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/combat/ability.c" line="45" column="6" bodyfile="src/combat/ability.c" bodystart="45" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This file contains functions for initializing and managing abilities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ability_8h" kindref="compound">ability.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ability__database_8h" kindref="compound">../database/game/ability_database.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ability_8c_1a3a754887b3c38533f740a7e840a839d1" kindref="member">init_ability</ref>(<ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roll_amount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accuracy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resource_cost,<sp/>dice_size_t<sp/>dice_size,<sp/>damage_type_t<sp/>damage_type);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="ability_8c_1ab7a141920ca0b319993d2a758043f43a" refkind="member"><highlight class="normal"><ref refid="structability__table__t" kindref="compound">ability_table_t</ref>*<sp/><ref refid="ability_8c_1ab7a141920ca0b319993d2a758043f43a" kindref="member">init_ability_table</ref>(memory_pool_t*<sp/>memory_pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdb__connection__t" kindref="compound">db_connection_t</ref>*<sp/>db_connection)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(memory_pool,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>pool<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structability__init__t" kindref="compound">ability_init_t</ref>*<sp/>rows<sp/>=<sp/><ref refid="ability__database_8c_1a23ecf5bd4fcbb6c0c843343b1d8b02e6" kindref="member">get_ability_table_from_db</ref>(db_connection);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(rows,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>fetch<sp/>ability<sp/>data<sp/>from<sp/>DB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structability__table__t" kindref="compound">ability_table_t</ref>*<sp/>table<sp/>=<sp/><ref refid="memory__management_8c_1ad9c929376b0501e9ad79f3a293fe8a71" kindref="member">memory_pool_alloc</ref>(memory_pool,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structability__table__t" kindref="compound">ability_table_t</ref>));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(table,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>ability<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_ABILITIES;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows[i].name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>rows[i].ability_number;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ability_8c_1a3a754887b3c38533f740a7e840a839d1" kindref="member">init_ability</ref>(&amp;table-&gt;abilities[slot],</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].name,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].roll_amount,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].accuracy,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].resource_cost,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].dice_size,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows[i].damage_type);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ability__database_8c_1ab46922c47f81556621ae64c66e58c0da" kindref="member">free_ability_table_from_db</ref>(rows);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="ability_8c_1aa23c1120061449449c0eed4b93ddbd7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ability_8c_1aa23c1120061449449c0eed4b93ddbd7d" kindref="member">free_ability_table</ref>(memory_pool_t*<sp/>memory_pool,<sp/><ref refid="structability__table__t" kindref="compound">ability_table_t</ref>*<sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(memory_pool,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>free_ability_table<sp/>memory<sp/>pool<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(table,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>free_ability_table<sp/>table<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory__management_8c_1af72f6fb9c867ee59c91532a9022e322e" kindref="member">memory_pool_free</ref>(memory_pool,<sp/>table);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="ability_8c_1a3a754887b3c38533f740a7e840a839d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ability_8c_1a3a754887b3c38533f740a7e840a839d1" kindref="member">init_ability</ref>(<ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roll_amount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accuracy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resource_cost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dice_size_t<sp/>dice_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>damage_type_t<sp/>damage_type)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(ability,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>init_ability<sp/>ability<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_PTR_HANDLER_RETURN(name,<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ability&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>init_ability<sp/>name<sp/>is<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(ability-&gt;name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ability-&gt;name),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ability-&gt;roll_amount<sp/>=<sp/>roll_amount;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ability-&gt;accuracy<sp/>=<sp/>accuracy;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ability-&gt;resource_cost<sp/>=<sp/>resource_cost;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ability-&gt;dice_size<sp/>=<sp/>dice_size;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ability-&gt;damage_type<sp/>=<sp/>damage_type;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/combat/ability.c"/>
  </compounddef>
</doxygen>
