<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="character_8h" kind="file" language="C++">
    <compoundname>character.h</compoundname>
    <includes refid="ability__fw_8h" local="yes">../combat/ability_fw.h</includes>
    <includes refid="damage_8h" local="yes">../combat/damage.h</includes>
    <includes refid="common_8h" local="yes">../common.h</includes>
    <includes refid="gear_8h" local="yes">../item/gear.h</includes>
    <includes refid="potion_8h" local="yes">../item/potion.h</includes>
    <includes refid="memory__management_8h" local="yes">../memory/memory_management.h</includes>
    <includes refid="stats_8h" local="yes">../stats/stats.h</includes>
    <includedby refid="character_8c" local="yes">src/character/character.c</includedby>
    <includedby refid="level_8h" local="yes">src/character/level.h</includedby>
    <includedby refid="monster_8h" local="yes">src/character/monster.h</includedby>
    <includedby refid="player_8h" local="yes">src/character/player.h</includedby>
    <includedby refid="combat__mode_8c" local="yes">src/combat/combat_mode.c</includedby>
    <includedby refid="damage_8c" local="yes">src/combat/damage.c</includedby>
    <includedby refid="character__database_8h" local="yes">src/database/game/character_database.h</includedby>
    <includedby refid="game_8c" local="yes">src/game.c</includedby>
    <includedby refid="inventory__mode_8c" local="yes">src/inventory/inventory_mode.c</includedby>
    <includedby refid="combat__output_8c" local="yes">src/io/output/specific/combat_output.c</includedby>
    <includedby refid="inventory__output_8c" local="yes">src/io/output/specific/inventory_output.c</includedby>
    <includedby refid="stats__output_8c" local="yes">src/io/output/specific/stats_output.c</includedby>
    <includedby refid="stats__output_8h" local="yes">src/io/output/specific/stats_output.h</includedby>
    <includedby refid="map__mode_8h" local="yes">src/map/map_mode.h</includedby>
    <includedby refid="stats__mode_8h" local="yes">src/stats/stats_mode.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>../../include/sqlite3.h</label>
      </node>
      <node id="1">
        <label>src/character/character.h</label>
        <link refid="character_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../character/character_fw.h</label>
        <link refid="character__fw_8h"/>
      </node>
      <node id="9">
        <label>../combat/ability.h</label>
        <link refid="ability_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../combat/ability_fw.h</label>
        <link refid="ability__fw_8h"/>
      </node>
      <node id="3">
        <label>../combat/damage.h</label>
        <link refid="damage_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../database/database.h</label>
        <link refid="database_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../item/gear.h</label>
        <link refid="gear_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gear_identifier.h</label>
        <link refid="gear__identifier_8h"/>
      </node>
      <node id="14">
        <label>../item/potion.h</label>
        <link refid="potion_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>logging/logger.h</label>
        <link refid="logger_8h"/>
      </node>
      <node id="7">
        <label>memory/memory_management.h</label>
        <link refid="memory__management_8h_source"/>
      </node>
      <node id="12">
        <label>../stats/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/character/character.c</label>
        <link refid="character_8c"/>
      </node>
      <node id="1">
        <label>src/character/character.h</label>
        <link refid="character_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/character/level.c</label>
        <link refid="level_8c"/>
      </node>
      <node id="3">
        <label>src/character/level.h</label>
        <link refid="level_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/character/monster.c</label>
        <link refid="monster_8c"/>
      </node>
      <node id="7">
        <label>src/character/monster.h</label>
        <link refid="monster_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/character/player.c</label>
        <link refid="player_8c"/>
      </node>
      <node id="12">
        <label>src/character/player.h</label>
        <link refid="player_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="14">
        <label>src/combat/damage.c</label>
        <link refid="damage_8c"/>
      </node>
      <node id="16">
        <label>src/database/game/character_database.c</label>
        <link refid="character__database_8c"/>
      </node>
      <node id="15">
        <label>src/database/game/character_database.h</label>
        <link refid="character__database_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="9">
        <label>src/game_data.c</label>
        <link refid="game__data_8c"/>
      </node>
      <node id="18">
        <label>src/inventory/inventory_mode.c</label>
        <link refid="inventory__mode_8c"/>
      </node>
      <node id="19">
        <label>src/io/output/specific/combat_output.c</label>
        <link refid="combat__output_8c"/>
      </node>
      <node id="20">
        <label>src/io/output/specific/inventory_output.c</label>
        <link refid="inventory__output_8c"/>
      </node>
      <node id="6">
        <label>src/io/output/specific/stats_output.c</label>
        <link refid="stats__output_8c"/>
      </node>
      <node id="21">
        <label>src/io/output/specific/stats_output.h</label>
        <link refid="stats__output_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/item/loot_generation.c</label>
        <link refid="loot__generation_8c"/>
      </node>
      <node id="10">
        <label>src/item/loot_generation.h</label>
        <link refid="loot__generation_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="25">
        <label>src/map/map_generator.c</label>
        <link refid="map__generator_8c"/>
      </node>
      <node id="26">
        <label>src/map/map_mode.c</label>
        <link refid="map__mode_8c"/>
      </node>
      <node id="24">
        <label>src/map/map_mode.h</label>
        <link refid="map__mode_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/stats/stats_mode.c</label>
        <link refid="stats__mode_8c"/>
      </node>
      <node id="27">
        <label>src/stats/stats_mode.h</label>
        <link refid="stats__mode_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcharacter__t" prot="public">character_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="character_8h_1ae0600c50055508929622fa9800374b65" prot="public" static="no">
        <name>MAX_ABILITY_LIMIT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="16" column="9" bodyfile="src/character/character.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="character_8h_1ace04dd5364c797a703db5e4f2be47fab" prot="public" static="no">
        <name>MAX_GEAR_LIMIT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="17" column="9" bodyfile="src/character/character.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="character_8h_1aec3914781eec3fcc71489a3777f17f3a" prot="public" static="no">
        <name>MAX_POTION_LIMIT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="18" column="9" bodyfile="src/character/character.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="character_8h_1a3456beb28fde149e47396d6aa2d94f5b" prot="public" static="no" strong="no">
        <type></type>
        <name>character_type_t</name>
        <enumvalue id="character_8h_1a3456beb28fde149e47396d6aa2d94f5bade5dc3e0dbd007d995ed3e37bde5ce7e" prot="public">
          <name>PLAYER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="character_8h_1a3456beb28fde149e47396d6aa2d94f5baf496eff98f9bb45646f2c88ea331998e" prot="public">
          <name>MONSTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="character_8h_1a3456beb28fde149e47396d6aa2d94f5bab26df4373bb31a33c70ffa75477f9875" prot="public">
          <name>BOSS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="20" column="1" bodyfile="src/character/character.h" bodystart="20" bodyend="24"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="character_8h_1a0d3ef0e36507728a026ce3b4c23fd193" prot="public" static="no">
        <type>struct character_t</type>
        <definition>typedef struct character_t character_t</definition>
        <argsstring></argsstring>
        <name>character_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="55" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="character_8h_1a87b851f7c5968a6dea7bb59499f24802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
        <definition>character_t * init_character</definition>
        <argsstring>(memory_pool_t *memory_pool, character_type_t type, const char *name)</argsstring>
        <name>init_character</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type>character_type_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Initializes a new character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool for dynamic allocation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the character (e.g., player, enemy) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the initialized character, or NULL on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="64" column="13" bodyfile="src/character/character.c" bodystart="13" bodyend="58" declfile="src/character/character.h" declline="64" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a77ef40fdd4f884f5818d81a18d544460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_character</definition>
        <argsstring>(memory_pool_t *memory_pool, character_t *character)</argsstring>
        <name>free_character</name>
        <param>
          <type>memory_pool_t *</type>
          <declname>memory_pool</declname>
        </param>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Frees the memory allocated for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memory_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory pool used for allocation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to be freed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="71" column="6" bodyfile="src/character/character.c" bodystart="60" bodyend="64" declfile="src/character/character.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a3f8d0f49cdd311f972cc95e12c27f36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_character_stats</definition>
        <argsstring>(character_t *character, int strength, int intelligence, int dexterity, int constitution)</argsstring>
        <name>set_character_stats</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intelligence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dexterity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>constitution</declname>
        </param>
        <briefdescription>
<para>Sets the stats for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to set stats for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strength</parametername>
</parameternamelist>
<parameterdescription>
<para>Strength value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intelligence</parametername>
</parameternamelist>
<parameterdescription>
<para>Intelligence value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dexterity</parametername>
</parameternamelist>
<parameterdescription>
<para>Dexterity value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constitution</parametername>
</parameternamelist>
<parameterdescription>
<para>Constitution value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="81" column="6" bodyfile="src/character/character.c" bodystart="66" bodyend="75" declfile="src/character/character.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a484f54433d003fa1ca771c709361d7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_stats</definition>
        <argsstring>(stats_t *stats, int strength, int intelligence, int dexterity, int constitution)</argsstring>
        <name>set_stats</name>
        <param>
          <type><ref refid="structstats__t" kindref="compound">stats_t</ref> *</type>
          <declname>stats</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intelligence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dexterity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>constitution</declname>
        </param>
        <briefdescription>
<para>Sets the stats for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stats</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the stats structure to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strength</parametername>
</parameternamelist>
<parameterdescription>
<para>Strength value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intelligence</parametername>
</parameternamelist>
<parameterdescription>
<para>Intelligence value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dexterity</parametername>
</parameternamelist>
<parameterdescription>
<para>Dexterity value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constitution</parametername>
</parameternamelist>
<parameterdescription>
<para>Constitution value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="91" column="6" bodyfile="src/character/character.c" bodystart="77" bodyend="84" declfile="src/character/character.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a3b350cf68795ee4c81ed76bd4298837b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_character_resources</definition>
        <argsstring>(resources_t *current_resources, resources_t *max_resources, stats_t *base_stats)</argsstring>
        <name>update_character_resources</name>
        <param>
          <type><ref refid="structresources__t" kindref="compound">resources_t</ref> *</type>
          <declname>current_resources</declname>
        </param>
        <param>
          <type><ref refid="structresources__t" kindref="compound">resources_t</ref> *</type>
          <declname>max_resources</declname>
        </param>
        <param>
          <type><ref refid="structstats__t" kindref="compound">stats_t</ref> *</type>
          <declname>base_stats</declname>
        </param>
        <briefdescription>
<para>Updates the character&apos;s resources based on their stats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current resources structure to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the max resources structure to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base_stats</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the base stats structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="99" column="6" bodyfile="src/character/character.c" bodystart="86" bodyend="113" declfile="src/character/character.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a7c7f7133819e040d60b082e65d3479dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_character_dmg_modifier</definition>
        <argsstring>(character_t *character, damage_type_t type, int value)</argsstring>
        <name>set_character_dmg_modifier</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>damage_type_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the damage modifier for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character to set the damage modifier for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of damage to modify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the damage modifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="107" column="6" bodyfile="src/character/character.c" bodystart="115" bodyend="125" declfile="src/character/character.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1ac1e7edc495be29bb8233cb226a2c2b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_ability</definition>
        <argsstring>(character_t *character, ability_t *ability)</argsstring>
        <name>add_ability</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structability__t" kindref="compound">ability_t</ref> *</type>
          <declname>ability</declname>
        </param>
        <briefdescription>
<para>Adds an ability to a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ability</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="114" column="6" bodyfile="src/character/character.c" bodystart="127" bodyend="137" declfile="src/character/character.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1ad33b1544779645cd5debe1c4b3f3c292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_ability</definition>
        <argsstring>(character_t *character, const ability_t *ability)</argsstring>
        <name>remove_ability</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>const <ref refid="structability__t" kindref="compound">ability_t</ref> *</type>
          <declname>ability</declname>
        </param>
        <briefdescription>
<para>Removes an ability from a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ability</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ability to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="121" column="6" bodyfile="src/character/character.c" bodystart="139" bodyend="154" declfile="src/character/character.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a54c2a5ff451efcd844bcdc22d912d7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_potion</definition>
        <argsstring>(character_t *character, potion_t *potion)</argsstring>
        <name>add_potion</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structpotion__t" kindref="compound">potion_t</ref> *</type>
          <declname>potion</declname>
        </param>
        <briefdescription>
<para>Adds a potion to a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>potion</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the potion to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="128" column="6" bodyfile="src/character/character.c" bodystart="242" bodyend="252" declfile="src/character/character.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a9dfe2b261717a1bf4df0398248583d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_potion</definition>
        <argsstring>(character_t *character, potion_t *potion)</argsstring>
        <name>remove_potion</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structpotion__t" kindref="compound">potion_t</ref> *</type>
          <declname>potion</declname>
        </param>
        <briefdescription>
<para>Removes a potion from a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>potion</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the potion to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="135" column="6" bodyfile="src/character/character.c" bodystart="254" bodyend="269" declfile="src/character/character.h" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>add_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Adds gear to a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="142" column="6" bodyfile="src/character/character.c" bodystart="156" bodyend="167" declfile="src/character/character.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a9b6139833c080df6362f786be008d485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>remove_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Removes a gear item from a character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear item to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="149" column="6" bodyfile="src/character/character.c" bodystart="169" bodyend="185" declfile="src/character/character.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1ab1e37ddc08bedac489696c9d5c67a391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_equipped_gear</definition>
        <argsstring>(character_t *character, gear_slot_t slot)</argsstring>
        <name>remove_equipped_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>gear_slot_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Removes the gear equipped in a specific slot of a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character whose gear is to be removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot from which the gear should be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="157" column="6" bodyfile="src/character/character.c" bodystart="187" bodyend="214" declfile="src/character/character.h" declline="157" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a7260b96f41aa6f3231f07bc00a63d9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add_equipped_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>add_equipped_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Adds an equipped gear in a specific slot of a character without updating stats and abilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the equipped gear to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the gear was successfully added, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="166" column="6" bodyfile="src/character/character.c" bodystart="216" bodyend="240" declfile="src/character/character.h" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a3176d1d1f62a7fc8ceabef4df6a1062c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void equip_gear</definition>
        <argsstring>(character_t *character, gear_t *gear)</argsstring>
        <name>equip_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="structgear__t" kindref="compound">gear_t</ref> *</type>
          <declname>gear</declname>
        </param>
        <briefdescription>
<para>Equips a gear item to a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gear</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the gear item to equip </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="173" column="6" bodyfile="src/character/character.c" bodystart="272" bodyend="290" declfile="src/character/character.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1acfa13bd0509bd8143fa383e5bd013cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unequip_gear</definition>
        <argsstring>(character_t *character, gear_slot_t slot)</argsstring>
        <name>unequip_gear</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>gear_slot_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Unequips a gear item from a character and adds it to the character&apos;s inventory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot to unequip from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="180" column="6" bodyfile="src/character/character.c" bodystart="292" bodyend="298" declfile="src/character/character.h" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1aa21c3970e45e47130b84a456027be1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_current_stats</definition>
        <argsstring>(character_t *character)</argsstring>
        <name>reset_current_stats</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Resets the current stats of a character to their base values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="186" column="6" bodyfile="src/combat/damage.c" bodystart="56" bodyend="58" declfile="src/character/character.h" declline="186" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1ae2022c4f067b5680708525477ff5bd4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_level</definition>
        <argsstring>(character_t *character, int level)</argsstring>
        <name>set_level</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Sets the level for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="193" column="6" bodyfile="src/character/character.c" bodystart="305" bodyend="308" declfile="src/character/character.h" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1ac57163bbd7a9a6802ebd1554cc24b2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_xp_reward</definition>
        <argsstring>(character_t *character, int xp_reward)</argsstring>
        <name>set_xp_reward</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xp_reward</declname>
        </param>
        <briefdescription>
<para>Sets the XP reward for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp_reward</parametername>
</parameternamelist>
<parameterdescription>
<para>The XP reward value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="200" column="6" bodyfile="src/character/character.c" bodystart="310" bodyend="313" declfile="src/character/character.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1af3632285f8e838713346e57ada76152c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_initial_xp</definition>
        <argsstring>(character_t *character, int xp)</argsstring>
        <name>set_initial_xp</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
<para>sets initial xp for a character </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial xp value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="207" column="6" bodyfile="src/character/character.c" bodystart="300" bodyend="303" declfile="src/character/character.h" declline="207" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1aa0397e3fbf0b4f56425d5823a1f0b217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_skill_points</definition>
        <argsstring>(character_t *character, int skill_points)</argsstring>
        <name>set_skill_points</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skill_points</declname>
        </param>
        <briefdescription>
<para>Sets the skill points for a character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skill_points</parametername>
</parameternamelist>
<parameterdescription>
<para>How many skill points the character has </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="214" column="6" bodyfile="src/character/character.c" bodystart="315" bodyend="318" declfile="src/character/character.h" declline="214" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="character_8h_1a8d818f0345771df9d254997231eca424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_player_stats</definition>
        <argsstring>(character_t *player)</argsstring>
        <name>reset_player_stats</name>
        <param>
          <type><ref refid="structcharacter__t" kindref="compound">character_t</ref> *</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Resets the player stats to their base values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the player character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/character/character.h" line="220" column="6" bodyfile="src/character/character.c" bodystart="320" bodyend="327" declfile="src/character/character.h" declline="220" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes functions for working working with the character. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CHARACTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHARACTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ability__fw_8h" kindref="compound">../combat/ability_fw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="damage_8h" kindref="compound">../combat/damage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">../common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gear_8h" kindref="compound">../item/gear.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="potion_8h" kindref="compound">../item/potion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../memory/memory_management.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stats_8h" kindref="compound">../stats/stats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ABILITY_LIMIT<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_GEAR_LIMIT<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_POTION_LIMIT<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>PLAYER,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>MONSTER,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>BOSS</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/>character_type_t;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structcharacter__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcharacter__t" kindref="compound">character_t</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>character_type_t<sp/>type;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[MAX_NAME_LENGTH];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstats__t" kindref="compound">stats_t</ref><sp/>base_stats;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstats__t" kindref="compound">stats_t</ref><sp/>current_stats;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresources__t" kindref="compound">resources_t</ref><sp/>max_resources;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresources__t" kindref="compound">resources_t</ref><sp/>current_resources;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdamage__resistance__t" kindref="compound">damage_resistance_t</ref><sp/>resistance[DAMAGE_TYPE_COUNT];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdefenses__t" kindref="compound">defenses_t</ref><sp/>defenses;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>abilities[MAX_ABILITY_LIMIT];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>base_attack;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ability_count;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpotion__t" kindref="compound">potion_t</ref>*<sp/>potion_inventory[MAX_POTION_LIMIT];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>potion_count;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear_inventory[MAX_GEAR_LIMIT];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gear_count;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>equipment[MAX_SLOT];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp_reward;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skill_points;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/><ref refid="character_8h_1a87b851f7c5968a6dea7bb59499f24802" kindref="member">init_character</ref>(memory_pool_t*<sp/>memory_pool,<sp/>character_type_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a77ef40fdd4f884f5818d81a18d544460" kindref="member">free_character</ref>(memory_pool_t*<sp/>memory_pool,<sp/><ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a3f8d0f49cdd311f972cc95e12c27f36a" kindref="member">set_character_stats</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intelligence,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dexterity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constitution);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a484f54433d003fa1ca771c709361d7cb" kindref="member">set_stats</ref>(<ref refid="structstats__t" kindref="compound">stats_t</ref>*<sp/>stats,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intelligence,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dexterity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constitution);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a3b350cf68795ee4c81ed76bd4298837b" kindref="member">update_character_resources</ref>(<ref refid="structresources__t" kindref="compound">resources_t</ref>*<sp/>current_resources,<sp/><ref refid="structresources__t" kindref="compound">resources_t</ref>*<sp/>max_resources,<sp/><ref refid="structstats__t" kindref="compound">stats_t</ref>*<sp/>base_stats);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a7c7f7133819e040d60b082e65d3479dc" kindref="member">set_character_dmg_modifier</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/>damage_type_t<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1ac1e7edc495be29bb8233cb226a2c2b15" kindref="member">add_ability</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1ad33b1544779645cd5debe1c4b3f3c292" kindref="member">remove_ability</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structability__t" kindref="compound">ability_t</ref>*<sp/>ability);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a54c2a5ff451efcd844bcdc22d912d7e2" kindref="member">add_potion</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structpotion__t" kindref="compound">potion_t</ref>*<sp/>potion);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a9dfe2b261717a1bf4df0398248583d22" kindref="member">remove_potion</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structpotion__t" kindref="compound">potion_t</ref>*<sp/>potion);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a0ecf3b9eaff247ab9ee5c8af97c7d7ca" kindref="member">add_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a9b6139833c080df6362f786be008d485" kindref="member">remove_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1ab1e37ddc08bedac489696c9d5c67a391" kindref="member">remove_equipped_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/>gear_slot_t<sp/>slot);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a7260b96f41aa6f3231f07bc00a63d9f6" kindref="member">add_equipped_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a3176d1d1f62a7fc8ceabef4df6a1062c" kindref="member">equip_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/><ref refid="structgear__t" kindref="compound">gear_t</ref>*<sp/>gear);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1acfa13bd0509bd8143fa383e5bd013cef" kindref="member">unequip_gear</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/>gear_slot_t<sp/>slot);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1aa21c3970e45e47130b84a456027be1f7" kindref="member">reset_current_stats</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1ae2022c4f067b5680708525477ff5bd4a" kindref="member">set_level</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1ac57163bbd7a9a6802ebd1554cc24b2e9" kindref="member">set_xp_reward</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp_reward);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1af3632285f8e838713346e57ada76152c" kindref="member">set_initial_xp</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1aa0397e3fbf0b4f56425d5823a1f0b217" kindref="member">set_skill_points</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>character,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skill_points);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="character_8h_1a8d818f0345771df9d254997231eca424" kindref="member">reset_player_stats</ref>(<ref refid="structcharacter__t" kindref="compound">character_t</ref>*<sp/>player);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//CHARACTER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/character/character.h"/>
  </compounddef>
</doxygen>
