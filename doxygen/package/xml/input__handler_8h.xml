<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="input__handler_8h" kind="file" language="C++">
    <compoundname>input_handler.h</compoundname>
    <includes refid="input__types_8h" local="yes">input_types.h</includes>
    <includes local="no">notcurses/notcurses.h</includes>
    <includedby refid="combat__mode_8c" local="yes">src/combat/combat_mode.c</includedby>
    <includedby refid="inventory__mode_8c" local="yes">src/inventory/inventory_mode.c</includedby>
    <includedby refid="input__handler_8c" local="yes">src/io/input/input_handler.c</includedby>
    <includedby refid="io__handler_8c" local="yes">src/io/io_handler.c</includedby>
    <includedby refid="io__handler_8h" local="yes">src/io/io_handler.h</includedby>
    <includedby refid="output__handler_8c" local="yes">src/io/output/common/output_handler.c</includedby>
    <includedby refid="combat__output_8c" local="yes">src/io/output/specific/combat_output.c</includedby>
    <includedby refid="inventory__output_8c" local="yes">src/io/output/specific/inventory_output.c</includedby>
    <includedby refid="map__mode_8c" local="yes">src/map/map_mode.c</includedby>
    <includedby refid="map__mode_8h" local="yes">src/map/map_mode.h</includedby>
    <includedby refid="language__menu_8c" local="yes">src/menu/language_menu.c</includedby>
    <includedby refid="main__menu_8c" local="yes">src/menu/main_menu.c</includedby>
    <includedby refid="menu_8c" local="yes">src/menu/menu.c</includedby>
    <includedby refid="save__menu_8c" local="yes">src/menu/save_menu.c</includedby>
    <includedby refid="stats__mode_8c" local="yes">src/stats/stats_mode.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/io/input/input_handler.h</label>
        <link refid="input__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>input_types.h</label>
        <link refid="input__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>notcurses/notcurses.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/combat/combat_mode.c</label>
        <link refid="combat__mode_8c"/>
      </node>
      <node id="7">
        <label>src/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="3">
        <label>src/inventory/inventory_mode.c</label>
        <link refid="inventory__mode_8c"/>
      </node>
      <node id="4">
        <label>src/io/input/input_handler.c</label>
        <link refid="input__handler_8c"/>
      </node>
      <node id="1">
        <label>src/io/input/input_handler.h</label>
        <link refid="input__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/io/io_handler.c</label>
        <link refid="io__handler_8c"/>
      </node>
      <node id="6">
        <label>src/io/io_handler.h</label>
        <link refid="io__handler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/io/output/common/output_handler.c</label>
        <link refid="output__handler_8c"/>
      </node>
      <node id="9">
        <label>src/io/output/media/media_output.c</label>
        <link refid="media__output_8c"/>
      </node>
      <node id="10">
        <label>src/io/output/media/media_output_handler.c</label>
        <link refid="media__output__handler_8c"/>
      </node>
      <node id="11">
        <label>src/io/output/specific/combat_output.c</label>
        <link refid="combat__output_8c"/>
      </node>
      <node id="12">
        <label>src/io/output/specific/inventory_output.c</label>
        <link refid="inventory__output_8c"/>
      </node>
      <node id="13">
        <label>src/io/output/specific/map_output.c</label>
        <link refid="map__output_8c"/>
      </node>
      <node id="14">
        <label>src/io/output/specific/stats_output.c</label>
        <link refid="stats__output_8c"/>
      </node>
      <node id="15">
        <label>src/io/output/specific/wait_output.c</label>
        <link refid="wait__output_8c"/>
      </node>
      <node id="16">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="19">
        <label>src/map/map_generator.c</label>
        <link refid="map__generator_8c"/>
      </node>
      <node id="17">
        <label>src/map/map_mode.c</label>
        <link refid="map__mode_8c"/>
      </node>
      <node id="18">
        <label>src/map/map_mode.h</label>
        <link refid="map__mode_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/menu/language_menu.c</label>
        <link refid="language__menu_8c"/>
      </node>
      <node id="21">
        <label>src/menu/main_menu.c</label>
        <link refid="main__menu_8c"/>
      </node>
      <node id="22">
        <label>src/menu/menu.c</label>
        <link refid="menu_8c"/>
      </node>
      <node id="23">
        <label>src/menu/save_menu.c</label>
        <link refid="save__menu_8c"/>
      </node>
      <node id="24">
        <label>src/stats/stats_mode.c</label>
        <link refid="stats__mode_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="input__handler_8h_1a8e98d83b2d8d01b9b1d2dfb3bd26b49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool init_input_handler</definition>
        <argsstring>(struct notcurses *nc)</argsstring>
        <name>init_input_handler</name>
        <param>
          <type>struct notcurses *</type>
          <declname>nc</declname>
        </param>
        <briefdescription>
<para>Initialize the input handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up the input handling system. This function must be called before any other input functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nc</parametername>
</parameternamelist>
<parameterdescription>
<para>The Notcurses instance to use for input handling </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/input/input_handler.h" line="21" column="6" bodyfile="src/io/input/input_handler.c" bodystart="100" bodyend="113" declfile="src/io/input/input_handler.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="input__handler_8h_1a0730e0975aa5e78a98a269a46cf62181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_input_blocking</definition>
        <argsstring>(input_event_t *event)</argsstring>
        <name>get_input_blocking</name>
        <param>
          <type><ref refid="structinput__event__t" kindref="compound">input_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Get the next input event (blocking) </para>
        </briefdescription>
        <detaileddescription>
<para>Waits for an input event and translates it to a logical input type. This function blocks until input is received.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <ref refid="structinput__event__t" kindref="compound">input_event_t</ref> structure to fill with the input event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if an event was retrieved, false on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/input/input_handler.h" line="32" column="6" bodyfile="src/io/input/input_handler.c" bodystart="147" bodyend="179" declfile="src/io/input/input_handler.h" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="input__handler_8h_1abb5786844da2a21d971c5509f50074cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_input_nonblocking</definition>
        <argsstring>(input_event_t *event)</argsstring>
        <name>get_input_nonblocking</name>
        <param>
          <type><ref refid="structinput__event__t" kindref="compound">input_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Get the next input event (non-blocking) </para>
        </briefdescription>
        <detaileddescription>
<para>Checks for an input event and translates it to a logical input type. This function does not block if no input is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <ref refid="structinput__event__t" kindref="compound">input_event_t</ref> structure to fill with the input event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if an event was retrieved, false if no events are available </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/input/input_handler.h" line="43" column="6" bodyfile="src/io/input/input_handler.c" bodystart="181" bodyend="210" declfile="src/io/input/input_handler.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="input__handler_8h_1a1155f725de68988b053cf1962699b4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="input__types_8h_1ac2f78e4a482d0202ecb440c076ca7e70" kindref="member">input_t</ref></type>
        <definition>input_t translate_input</definition>
        <argsstring>(const ncinput *raw_input)</argsstring>
        <name>translate_input</name>
        <param>
          <type>const ncinput *</type>
          <declname>raw_input</declname>
        </param>
        <briefdescription>
<para>Translate a raw Notcurses input to a logical input type. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper function to convert from hardware-specific to logical inputs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>raw_input</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw Notcurses input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding logical input type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/input/input_handler.h" line="53" column="9" bodyfile="src/io/input/input_handler.c" bodystart="62" bodyend="98" declfile="src/io/input/input_handler.h" declline="53" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="input__handler_8h_1ad987e650830efc5d227cc918e75736b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shutdown_input_handler</definition>
        <argsstring>(void)</argsstring>
        <name>shutdown_input_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shutdown the input handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up resources. This function should be called when shutting down the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/input/input_handler.h" line="60" column="6" bodyfile="src/io/input/input_handler.c" bodystart="212" bodyend="214" declfile="src/io/input/input_handler.h" declline="60" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Exposes functions for working with input. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INPUT_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__types_8h" kindref="compound">input_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;notcurses/notcurses.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="input__handler_8h_1a8e98d83b2d8d01b9b1d2dfb3bd26b49c" kindref="member">init_input_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>notcurses*<sp/>nc);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="input__handler_8h_1a0730e0975aa5e78a98a269a46cf62181" kindref="member">get_input_blocking</ref>(<ref refid="structinput__event__t" kindref="compound">input_event_t</ref>*<sp/>event);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="input__handler_8h_1abb5786844da2a21d971c5509f50074cc" kindref="member">get_input_nonblocking</ref>(<ref refid="structinput__event__t" kindref="compound">input_event_t</ref>*<sp/>event);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="input__types_8h_1ac2f78e4a482d0202ecb440c076ca7e70" kindref="member">input_t</ref><sp/><ref refid="input__handler_8h_1a1155f725de68988b053cf1962699b4ad" kindref="member">translate_input</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ncinput*<sp/>raw_input);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="input__handler_8h_1ad987e650830efc5d227cc918e75736b4" kindref="member">shutdown_input_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>INPUT_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/io/input/input_handler.h"/>
  </compounddef>
</doxygen>
